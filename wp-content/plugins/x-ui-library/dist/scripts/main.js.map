{"version":3,"sources":["../modules/buttons/assets/scripts/cf7.js","../node_modules/get-css-data/dist/get-css-data.esm.js","../node_modules/balanced-match/index.js","../src/parse-css.js","../src/parse-vars.js","../src/stringify-css.js","../src/transform-css.js","../src/walk-css.js","../src/index.js"],"names":["checkAcceptance","form","let","accepted","querySelectorAll","forEach","parent","checkbox","classList","contains","querySelector","checked","button","disabled","clearResponse","wrap","dataset","name","removeValidationError","setStatus","status","defaultStatuses","Map","prevStatus","has","get","Array","from","values","includes","replace","trim","getAttribute","wpcf7","setAttribute","add","remove","detail","contactFormId","id","pluginVersion","contactFormLocale","locale","unitTag","containerPostId","containerPost","triggerEvent","target","event","CustomEvent","bubbles","document","dispatchEvent","validate","options","arguments","length","undefined","scope","schema","closest","wrapList","formData","reduce","control","type","append","value","FormData","Promise","resolve","then","swv","result","error","validInputs","field","setValidationError","updateReflection","reflection","tagName","toLowerCase","output","push","default","slice","input","File","textContent","hasAttribute","removeAttribute","createElement","appendChild","finally","fieldName","message","errorId","replaceAll","firstFoundControl","li","insertAdjacentHTML","insertAdjacentText","messageElement","innerHTML","elm","setCustomValidity","addEventListener","element","val","match","indexOf","response","console","log","apiResponse","invalid_fields","blocked","formElement","submitButton","t","e","r","mimeType","onBeforeSend","Function","prototype","onSuccess","onError","onComplete","n","isArray","o","apply","map","s","charAt","a","c","i","href","String","Boolean","all","window","atob","host","split","location","protocol","XDomainRequest","open","timeout","onprogress","ontimeout","onload","responseText","onerror","setTimeout","send","warn","concat","XMLHttpRequest","overrideMimeType","onreadystatechange","readyState","rootElement","include","exclude","filter","skipDisabled","useCSSOM","matches","matchesSelector","webkitMatchesSelector","mozMatchesSelector","msMatchesSelector","oMatchesSelector","call","reverse","splice","join","u","f","l","rules","absoluteUrls","absoluteRules","xhr","url","test","urls","nodeName","d","p","decodeURIComponent","substring","sheet","cssRules","cssText","m","implementation","createHTMLDocument","head","body","baseURI","RegExp","start","end","pre","post","pop","preserveStatic","removeComments","Error","exec","comment","h","_","property","g","declarations","vendor","keyframes","media","M","supports","selectors","some","stylesheet","errors","parseHost","store","onWarning","charset","custom-media","declaration","font-face","import","keyframe","namespace","page","page-margin-box","rule","preserveVars","variables","Object","hasOwnProperty","range","v","CSS","y","group","job","shadowDOM","onlyLegacy","silent","updateDOM","updateURLs","watch","onFinally","b","cssComments","cssKeyframes","cssMediaQueries","cssUrls","cssVarDeclRules","cssVarDecls","cssVarFunc","cssVars","S","dom","user","E","w","C","x","O","A","R","__benchmark","MutationObserver","disconnect","attributeName","T","addedNodes","nodeType","removedNodes","parentNode","removeChild","observe","documentElement","attributes","attributeFilter","childList","subtree","clearTimeout","keys","__cssVars","text","getComputedStyle","getPropertyValue","style","setProperty","shadowRoot","responseURL","L","statusText","tree","insertBefore","nextSibling","j","offsetHeight","JSON","parse","stringify","removeEventListener","performance","now","Date","getTime","reset"],"mappings":"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","file":"main.js","sourcesContent":["(function () {\n\n  const checkAcceptance = (form) => {\n    let accepted = true;\n\n    form.querySelectorAll('.wpcf7-acceptance').forEach(parent => {\n      if (!accepted || parent.classList.contains('optional')) {\n        return;\n      }\n\n      const checkbox = parent.querySelector('input[type=\"checkbox\"]');\n\n      if (parent.classList.contains('invert') && checkbox.checked\n        || !parent.classList.contains('invert') && !checkbox.checked) {\n        accepted = false;\n      }\n    });\n\n    form.querySelectorAll('.wpcf7-x_submit').forEach(button => {\n      debugger;\n\n      button.disabled = !accepted;\n    });\n  };\n  const urlInputHelper = form => {\n    form.querySelectorAll('.x_inputs-wpcf7-validates-as-url').forEach(element => {\n      element.addEventListener('change', event => {\n        let val = element.value.trim();\n\n        if (val && !val.match(/^[a-z][a-z0-9.+-]*:/i)\n          && -1 !== val.indexOf('.')) {\n          val = val.replace(/^\\/+/, '');\n          val = 'https://' + val;\n        }\n\n        element.value = val;\n      });\n    });\n  };\n\n  const clearResponse = form => {\n    form.querySelectorAll('.x_inputs-wpcf7-form-control-wrap').forEach(wrap => {\n      if (wrap.dataset.name) {\n        removeValidationError(form, wrap.dataset.name);\n      }\n    });\n\n  };\n\n  const setStatus = (form, status) => {\n    const defaultStatuses = new Map([\n      // 0: Status in API response, 1: Status in HTML class\n      ['init', 'init'],\n      ['validation_failed', 'invalid'],\n      ['acceptance_missing', 'unaccepted'],\n      ['spam', 'spam'],\n      ['aborted', 'aborted'],\n      ['mail_sent', 'sent'],\n      ['mail_failed', 'failed'],\n      ['submitting', 'submitting'],\n      ['resetting', 'resetting'],\n      ['validating', 'validating'],\n      ['payment_required', 'payment-required'],\n    ]);\n\n    if (defaultStatuses.has(status)) {\n      status = defaultStatuses.get(status);\n    }\n\n    if (!Array.from(defaultStatuses.values()).includes(status)) {\n      status = status.replace(/[^0-9a-z]+/i, ' ').trim();\n      status = status.replace(/\\s+/, '-');\n      status = `custom-${status}`;\n    }\n\n    const prevStatus = form.getAttribute('data-status');\n\n    form.wpcf7.status = status;\n    form.setAttribute('data-status', status);\n    form.classList.add(status);\n\n    if (prevStatus && prevStatus !== status) {\n      form.classList.remove(prevStatus);\n\n      const detail = {\n        contactFormId: form.wpcf7.id,\n        pluginVersion: form.wpcf7.pluginVersion,\n        contactFormLocale: form.wpcf7.locale,\n        unitTag: form.wpcf7.unitTag,\n        containerPostId: form.wpcf7.containerPost,\n        status: form.wpcf7.status,\n        prevStatus,\n      };\n\n      triggerEvent(form, 'statuschanged', detail);\n    }\n\n    return status;\n  };\n  const triggerEvent = (target, name, detail) => {\n    const event = new CustomEvent(`wpcf7${name}`, {\n      bubbles: true,\n      detail,\n    });\n\n    if (typeof target === 'string') {\n      target = document.querySelector(target);\n    }\n\n    target.dispatchEvent(event);\n  };\n\n  function validate(form, options = {}) {\n    const {\n      target,\n      scope = form,\n      ...remainingOptions\n    } = options;\n\n    if (undefined === form.wpcf7?.schema) {\n      return;\n    }\n\n    const schema = {...form.wpcf7.schema};\n\n    if (undefined !== target) {\n      if (!form.contains(target)) {\n        return;\n      }\n\n      // Event target is not a wpcf7 form control.\n      if (!target.closest('.x_inputs-wpcf7-form-control-wrap[data-name]')) {\n        return;\n      }\n\n      if (target.closest('.novalidate')) {\n        return;\n      }\n    }\n\n    const wrapList = scope.querySelectorAll('.x_inputs-wpcf7-form-control-wrap');\n\n    const formData = Array.from(wrapList).reduce((formData, wrap) => {\n      if (wrap.closest('.novalidate')) {\n        return formData;\n      }\n\n      wrap.querySelectorAll(\n        ':where( input, textarea, select ):enabled'\n      ).forEach(control => {\n        if (!control.name) {\n          return;\n        }\n\n        switch (control.type) {\n          case 'button':\n          case 'image':\n          case 'reset':\n          case 'submit':\n          case 'file':\n          case 'checkbox':\n          case 'radio':\n          case 'select-multiple':\n            break;\n          default:\n            formData.append(control.name, control.value);\n        }\n      });\n\n      return formData;\n    }, new FormData());\n\n    const prevStatus = form.getAttribute('data-status');\n\n    Promise.resolve(setStatus(form, 'validating'))\n      .then(status => {\n        if (undefined !== swv) {\n          const result = swv.validate(schema, formData, options);\n\n          for (const wrap of wrapList) {\n            if (undefined === wrap.dataset.name) {\n              continue;\n            }\n\n            const field = wrap.dataset.name;\n\n            if (result.has(field)) {\n              const {error, validInputs} = result.get(field);\n\n              removeValidationError(form, field);\n              if (undefined !== error) {\n                setValidationError(form, field, error, {scope});\n              }\n\n              updateReflection(form, field, validInputs ?? []);\n            }\n\n            if (wrap.contains(target)) {\n              break;\n            }\n          }\n        }\n      })\n      .finally(() => {\n        setStatus(form, prevStatus);\n      });\n  }\n\n  const setValidationError = (form, fieldName, message, options) => {\n    const {\n      scope = form,\n      ...remainingOptions\n    } = options ?? {};\n    debugger\n    const errorId = `${form.wpcf7?.unitTag}-ve-${fieldName}`\n      .replaceAll(/[^0-9a-z_-]+/ig, '');\n\n    const firstFoundControl = form.querySelector(\n      `.x_inputs-wpcf7-form-control-wrap[data-name=\"${fieldName}\"] .x_inputs-wpcf7-form-control`\n    );\n\n    const setScreenReaderValidationError = () => {\n      const li = document.createElement('li');\n\n      li.setAttribute('id', errorId);\n\n      if (firstFoundControl && firstFoundControl.id) {\n        li.insertAdjacentHTML(\n          'beforeend',\n          `<a href=\"#${firstFoundControl.id}\">${message}</a>`\n        );\n      } else {\n        li.insertAdjacentText(\n          'beforeend',\n          message\n        );\n      }\n\n      form.wpcf7.parent.querySelector(\n        '.screen-reader-response ul'\n      ).appendChild(li);\n    };\n\n    const setVisualValidationError = () => {\n      scope.querySelectorAll(\n        `.x_inputs-wpcf7-form-control-wrap[data-name=\"${fieldName}\"]`\n      ).forEach(wrap => {\n        // @todo add magic\n        wrap.classList.add('ps-input-status-error');\n        let messageElement = wrap.querySelector('.ps-input-message');\n\n        if (!messageElement) {\n          messageElement = document.createElement('span')\n        }\n        ;\n        messageElement.setAttribute('aria-hidden', 'true');\n        messageElement.innerHTML = message;\n\n        wrap.querySelectorAll('[aria-invalid]').forEach(elm => {\n          elm.setAttribute('aria-invalid', 'true');\n        });\n\n        wrap.querySelectorAll('.x_inputs-wpcf7-form-control').forEach(control => {\n          control.classList.add('wpcf7-not-valid');\n          control.setAttribute('aria-describedby', errorId);\n          if (typeof control.setCustomValidity === 'function') {\n            control.setCustomValidity(message);\n          }\n        });\n      });\n    };\n\n    setScreenReaderValidationError();\n    setVisualValidationError();\n  };\n\n  const removeValidationError = (form, fieldName) => {\n    debugger;\n    const errorId = `${form.wpcf7?.unitTag}-ve-${fieldName}`\n      .replaceAll(/[^0-9a-z_-]+/ig, '');\n\n    form.wpcf7.parent.querySelector(\n      `.screen-reader-response ul li#${errorId}`\n    )?.remove();\n\n    form.querySelectorAll(\n      `.x_inputs-wpcf7-form-control-wrap[data-name=\"${fieldName}\"]`\n    ).forEach(wrap => {\n      wrap.classList.remove('ps-input-status-error');\n      let messageElement = wrap.querySelector('.ps-input-message');\n      messageElement.innerHTML = '';\n      wrap.querySelectorAll('[aria-invalid]').forEach(elm => {\n        elm.setAttribute('aria-invalid', 'false');\n      });\n\n      wrap.querySelectorAll('.x_inputs-wpcf7-form-control').forEach(control => {\n        control.removeAttribute('aria-describedby');\n        control.classList.remove('wpcf7-not-valid');\n\n        if (typeof control.setCustomValidity === 'function') {\n          control.setCustomValidity('');\n        }\n      });\n    });\n  };\n\n  const updateReflection = (form, field, validInputs) => {\n    form.querySelectorAll(\n      `[data-reflection-of=\"${field}\"]`\n    ).forEach(reflection => {\n      if ('output' === reflection.tagName.toLowerCase()) {\n        const output = reflection;\n\n        if (0 === validInputs.length) {\n          validInputs.push(output.dataset.default);\n        }\n\n        validInputs.slice(0, 1).forEach(input => {\n          if (input instanceof File) {\n            input = input.name;\n          }\n\n          output.textContent = input;\n        });\n\n      } else {\n        reflection.querySelectorAll(\n          'output'\n        ).forEach(output => {\n          if (output.hasAttribute('data-default')) {\n            if (0 === validInputs.length) {\n              output.removeAttribute('hidden');\n            } else {\n              output.setAttribute('hidden', 'hidden');\n            }\n          } else {\n            output.remove();\n          }\n        });\n\n        validInputs.forEach(input => {\n\n          if (input instanceof File) {\n            input = input.name;\n          }\n\n          const output = document.createElement('output');\n\n          output.setAttribute('name', field);\n          output.textContent = input;\n\n          reflection.appendChild(output);\n        });\n      }\n    });\n  };\n\n  document.addEventListener('DOMContentLoaded', (event) => {\n    // Your code here\n    document.querySelectorAll('.wpcf7-form').forEach(form => {\n      urlInputHelper(form);\n      checkAcceptance(form);\n      form.addEventListener('wpcf7submit', (event) => {\n        const status = event.detail.status;\n        // @todo\n        console.log('status 1', status);\n        console.log('event.detail 1', event.detail);\n        const response = event.detail.apiResponse;\n        if (response?.invalid_fields) {\n          response.invalid_fields.forEach(error => {\n            setValidationError(form, error.field, error.message);\n          })\n        }\n      });\n      form.addEventListener('wpcf7reset', (event) => {\n        const status = event.detail.status;\n        // @todo\n        console.log('status 4', status);\n        console.log('event.detail 4', event.detail);\n      });\n\n      form.addEventListener('wpcf7submitting', function (event) {\n        if (wpcf7.blocked) {\n          clearResponse(form);\n          return;\n        }\n      })\n      form.addEventListener('wpcf7beforesubmit', (event) => {\n        const status = event.detail.status;\n        // @todo\n        clearResponse(form);\n      });\n\n      form.addEventListener('change', event => {\n        if (event.target.closest('.x_inputs-wpcf7-form-control')) {\n          validate(form, {target: event.target});\n        }\n      });\n\n      form.addEventListener('change', event => {\n        checkAcceptance(form);\n      });\n\n      form.addEventListener('wpcf7reset', event => {\n        checkAcceptance(form);\n      });\n      form.addEventListener('wpcf7statuschanged', (event) => {\n        const status = event.detail.status;\n        console.log('event', event);\n        console.log('status', status);\n        console.log('event.detail', event.detail);\n        const formElement = event.target;\n        formElement.querySelectorAll('.wpcf7-x_submit').forEach(submitButton => {\n          if (status === 'submitting') {\n            debugger;\n            submitButton.disabled = true;\n          } else if (status === 'invalid') {\n            debugger;\n            submitButton.disabled = false;\n          } else if (status === 'validating') {\n            if (undefined !== swv) {\n              // const result = swv.validate( schema, formData, options );\n              if (undefined === formElement.wpcf7?.schema) {\n                return;\n              }\n              const schema = {...formElement.wpcf7.schema};\n\n            }\n          } else if (status === 'resetting') {\n            clearResponse(form);\n          }\n        })\n      })\n    });\n  });\n\n})();\n","/*!\n * get-css-data\n * v2.1.0\n * https://github.com/jhildenbiddle/get-css-data\n * (c) 2018-2022 John Hildenbiddle <http://hildenbiddle.com>\n * MIT license\n */\nfunction getUrls(urls) {\n    var options = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n    var settings = {\n        mimeType: options.mimeType || null,\n        onBeforeSend: options.onBeforeSend || Function.prototype,\n        onSuccess: options.onSuccess || Function.prototype,\n        onError: options.onError || Function.prototype,\n        onComplete: options.onComplete || Function.prototype\n    };\n    var urlArray = Array.isArray(urls) ? urls : [ urls ];\n    var urlQueue = Array.apply(null, Array(urlArray.length)).map((function(x) {\n        return null;\n    }));\n    function isValidCss(text) {\n        var isString = typeof text === \"string\";\n        var isHTML = isString && text.trim().charAt(0) === \"<\";\n        return isString && !isHTML;\n    }\n    function onError(xhr, urlIndex) {\n        settings.onError(xhr, urlArray[urlIndex], urlIndex);\n    }\n    function onSuccess(responseText, urlIndex) {\n        var returnVal = settings.onSuccess(responseText, urlArray[urlIndex], urlIndex);\n        responseText = returnVal === false ? \"\" : returnVal || responseText;\n        urlQueue[urlIndex] = responseText;\n        if (urlQueue.indexOf(null) === -1) {\n            settings.onComplete(urlQueue);\n        }\n    }\n    var parser = document.createElement(\"a\");\n    urlArray.forEach((function(url, i) {\n        parser.setAttribute(\"href\", url);\n        parser.href = String(parser.href);\n        var isIElte9 = Boolean(document.all && !window.atob);\n        var isIElte9CORS = isIElte9 && parser.host.split(\":\")[0] !== location.host.split(\":\")[0];\n        if (isIElte9CORS) {\n            var isSameProtocol = parser.protocol === location.protocol;\n            if (isSameProtocol) {\n                var xdr = new XDomainRequest;\n                xdr.open(\"GET\", url);\n                xdr.timeout = 0;\n                xdr.onprogress = Function.prototype;\n                xdr.ontimeout = Function.prototype;\n                xdr.onload = function() {\n                    var text = xdr.responseText;\n                    if (isValidCss(text)) {\n                        onSuccess(text, i);\n                    } else {\n                        onError(xdr, i);\n                    }\n                };\n                xdr.onerror = function(err) {\n                    onError(xdr, i);\n                };\n                setTimeout((function() {\n                    xdr.send();\n                }), 0);\n            } else {\n                console.warn(\"Internet Explorer 9 Cross-Origin (CORS) requests must use the same protocol (\".concat(url, \")\"));\n                onError(null, i);\n            }\n        } else {\n            var xhr = new XMLHttpRequest;\n            xhr.open(\"GET\", url);\n            if (settings.mimeType && xhr.overrideMimeType) {\n                xhr.overrideMimeType(settings.mimeType);\n            }\n            settings.onBeforeSend(xhr, url, i);\n            xhr.onreadystatechange = function() {\n                if (xhr.readyState === 4) {\n                    var text = xhr.responseText;\n                    if (xhr.status < 400 && isValidCss(text)) {\n                        onSuccess(text, i);\n                    } else if (xhr.status === 0 && isValidCss(text)) {\n                        onSuccess(text, i);\n                    } else {\n                        onError(xhr, i);\n                    }\n                }\n            };\n            xhr.send();\n        }\n    }));\n}\n\n/**\n * Gets CSS data from <style> and <link> nodes (including @imports), then\n * returns data in order processed by DOM. Allows specifying nodes to\n * include/exclude and filtering CSS data using RegEx.\n *\n * @preserve\n * @param {object}   [options] The options object\n * @param {object}   [options.rootElement=document] Root element to traverse for\n *                   <link> and <style> nodes.\n * @param {string}   [options.include] CSS selector matching <link> and <style>\n *                   nodes to include\n * @param {string}   [options.exclude] CSS selector matching <link> and <style>\n *                   nodes to exclude\n * @param {object}   [options.filter] Regular expression used to filter node CSS\n *                   data. Each block of CSS data is tested against the filter,\n *                   and only matching data is included.\n * @param {boolean}  [options.skipDisabled=true] Determines if disabled\n *                   stylesheets will be skipped while collecting CSS data.\n * @param {boolean}  [options.useCSSOM=false] Determines if CSS data will be\n *                   collected from a stylesheet's runtime values instead of its\n *                   text content. This is required to get accurate CSS data\n *                   when a stylesheet has been modified using the deleteRule()\n *                   or insertRule() methods because these modifications will\n *                   not be reflected in the stylesheet's text content.\n * @param {function} [options.onBeforeSend] Callback before XHR is sent. Passes\n *                   1) the XHR object, 2) source node reference, and 3) the\n *                   source URL as arguments.\n * @param {function} [options.onSuccess] Callback on each CSS node read. Passes\n *                   1) CSS text, 2) source node reference, and 3) the source\n *                   URL as arguments.\n * @param {function} [options.onError] Callback on each error. Passes 1) the XHR\n *                   object for inspection, 2) soure node reference, and 3) the\n *                   source URL that failed (either a <link> href or an @import)\n *                   as arguments\n * @param {function} [options.onComplete] Callback after all nodes have been\n *                   processed. Passes 1) concatenated CSS text, 2) an array of\n *                   CSS text in DOM order, and 3) an array of nodes in DOM\n *                   order as arguments.\n *\n * @example\n *\n *   getCssData({\n *     rootElement : document,\n *     include     : 'style,link[rel=\"stylesheet\"]',\n *     exclude     : '[href=\"skip.css\"]',\n *     filter      : /red/,\n *     skipDisabled: true,\n *     useCSSOM    : false,\n *     onBeforeSend(xhr, node, url) {\n *       // ...\n *     }\n *     onSuccess(cssText, node, url) {\n *       // ...\n *     }\n *     onError(xhr, node, url) {\n *       // ...\n *     },\n *     onComplete(cssText, cssArray, nodeArray) {\n *       // ...\n *     }\n *   });\n */ function getCssData(options) {\n    var regex = {\n        cssComments: /\\/\\*[\\s\\S]+?\\*\\//g,\n        cssImports: /(?:@import\\s*)(?:url\\(\\s*)?(?:['\"])([^'\"]*)(?:['\"])(?:\\s*\\))?(?:[^;]*;)/g\n    };\n    var settings = {\n        rootElement: options.rootElement || document,\n        include: options.include || 'style,link[rel=\"stylesheet\"]',\n        exclude: options.exclude || null,\n        filter: options.filter || null,\n        skipDisabled: options.skipDisabled !== false,\n        useCSSOM: options.useCSSOM || false,\n        onBeforeSend: options.onBeforeSend || Function.prototype,\n        onSuccess: options.onSuccess || Function.prototype,\n        onError: options.onError || Function.prototype,\n        onComplete: options.onComplete || Function.prototype\n    };\n    var sourceNodes = Array.apply(null, settings.rootElement.querySelectorAll(settings.include)).filter((function(node) {\n        return !matchesSelector(node, settings.exclude);\n    }));\n    var cssArray = Array.apply(null, Array(sourceNodes.length)).map((function(x) {\n        return null;\n    }));\n    function handleComplete() {\n        var isComplete = cssArray.indexOf(null) === -1;\n        if (isComplete) {\n            cssArray.reduce((function(skipIndices, value, i) {\n                if (value === \"\") {\n                    skipIndices.push(i);\n                }\n                return skipIndices;\n            }), []).reverse().forEach((function(skipIndex) {\n                return [ sourceNodes, cssArray ].forEach((function(arr) {\n                    return arr.splice(skipIndex, 1);\n                }));\n            }));\n            var cssText = cssArray.join(\"\");\n            settings.onComplete(cssText, cssArray, sourceNodes);\n        }\n    }\n    function handleSuccess(cssText, cssIndex, node, sourceUrl) {\n        var returnVal = settings.onSuccess(cssText, node, sourceUrl);\n        cssText = returnVal !== undefined && Boolean(returnVal) === false ? \"\" : returnVal || cssText;\n        resolveImports(cssText, node, sourceUrl, (function(resolvedCssText, errorData) {\n            if (cssArray[cssIndex] === null) {\n                errorData.forEach((function(data) {\n                    return settings.onError(data.xhr, node, data.url);\n                }));\n                if (!settings.filter || settings.filter.test(resolvedCssText)) {\n                    cssArray[cssIndex] = resolvedCssText;\n                } else {\n                    cssArray[cssIndex] = \"\";\n                }\n                handleComplete();\n            }\n        }));\n    }\n    function parseImportData(cssText, baseUrl) {\n        var ignoreRules = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : [];\n        var importData = {};\n        importData.rules = (cssText.replace(regex.cssComments, \"\").match(regex.cssImports) || []).filter((function(rule) {\n            return ignoreRules.indexOf(rule) === -1;\n        }));\n        importData.urls = importData.rules.map((function(rule) {\n            return rule.replace(regex.cssImports, \"$1\");\n        }));\n        importData.absoluteUrls = importData.urls.map((function(url) {\n            return getFullUrl(url, baseUrl);\n        }));\n        importData.absoluteRules = importData.rules.map((function(rule, i) {\n            var oldUrl = importData.urls[i];\n            var newUrl = getFullUrl(importData.absoluteUrls[i], baseUrl);\n            return rule.replace(oldUrl, newUrl);\n        }));\n        return importData;\n    }\n    function resolveImports(cssText, node, baseUrl, callbackFn) {\n        var __errorData = arguments.length > 4 && arguments[4] !== undefined ? arguments[4] : [];\n        var __errorRules = arguments.length > 5 && arguments[5] !== undefined ? arguments[5] : [];\n        var importData = parseImportData(cssText, baseUrl, __errorRules);\n        if (importData.rules.length) {\n            getUrls(importData.absoluteUrls, {\n                onBeforeSend: function onBeforeSend(xhr, url, urlIndex) {\n                    settings.onBeforeSend(xhr, node, url);\n                },\n                onSuccess: function onSuccess(cssText, url, urlIndex) {\n                    var returnVal = settings.onSuccess(cssText, node, url);\n                    cssText = returnVal === false ? \"\" : returnVal || cssText;\n                    var responseImportData = parseImportData(cssText, url, __errorRules);\n                    responseImportData.rules.forEach((function(rule, i) {\n                        cssText = cssText.replace(rule, responseImportData.absoluteRules[i]);\n                    }));\n                    return cssText;\n                },\n                onError: function onError(xhr, url, urlIndex) {\n                    __errorData.push({\n                        xhr: xhr,\n                        url: url\n                    });\n                    __errorRules.push(importData.rules[urlIndex]);\n                    resolveImports(cssText, node, baseUrl, callbackFn, __errorData, __errorRules);\n                },\n                onComplete: function onComplete(responseArray) {\n                    responseArray.forEach((function(importText, i) {\n                        cssText = cssText.replace(importData.rules[i], importText);\n                    }));\n                    resolveImports(cssText, node, baseUrl, callbackFn, __errorData, __errorRules);\n                }\n            });\n        } else {\n            callbackFn(cssText, __errorData);\n        }\n    }\n    if (sourceNodes.length) {\n        sourceNodes.forEach((function(node, i) {\n            var linkHref = node.getAttribute(\"href\");\n            var linkRel = node.getAttribute(\"rel\");\n            var isLink = node.nodeName.toLowerCase() === \"link\" && linkHref && linkRel && linkRel.toLowerCase().indexOf(\"stylesheet\") !== -1;\n            var isSkip = settings.skipDisabled === false ? false : node.disabled;\n            var isStyle = node.nodeName.toLowerCase() === \"style\";\n            if (isLink && !isSkip) {\n                var isURIScheme = linkHref.indexOf(\"data:text/css\") !== -1;\n                if (isURIScheme) {\n                    var cssText = decodeURIComponent(linkHref.substring(linkHref.indexOf(\",\") + 1));\n                    if (settings.useCSSOM) {\n                        cssText = Array.apply(null, node.sheet.cssRules).map((function(rule) {\n                            return rule.cssText;\n                        })).join(\"\");\n                    }\n                    handleSuccess(cssText, i, node, location.href);\n                } else {\n                    getUrls(linkHref, {\n                        mimeType: \"text/css\",\n                        onBeforeSend: function onBeforeSend(xhr, url, urlIndex) {\n                            settings.onBeforeSend(xhr, node, url);\n                        },\n                        onSuccess: function onSuccess(cssText, url, urlIndex) {\n                            var sourceUrl = getFullUrl(linkHref);\n                            handleSuccess(cssText, i, node, sourceUrl);\n                        },\n                        onError: function onError(xhr, url, urlIndex) {\n                            cssArray[i] = \"\";\n                            settings.onError(xhr, node, url);\n                            handleComplete();\n                        }\n                    });\n                }\n            } else if (isStyle && !isSkip) {\n                var _cssText = node.textContent;\n                if (settings.useCSSOM) {\n                    _cssText = Array.apply(null, node.sheet.cssRules).map((function(rule) {\n                        return rule.cssText;\n                    })).join(\"\");\n                }\n                handleSuccess(_cssText, i, node, location.href);\n            } else {\n                cssArray[i] = \"\";\n                handleComplete();\n            }\n        }));\n    } else {\n        settings.onComplete(\"\", []);\n    }\n}\n\nfunction getFullUrl(url, base) {\n    var d = document.implementation.createHTMLDocument(\"\");\n    var b = d.createElement(\"base\");\n    var a = d.createElement(\"a\");\n    d.head.appendChild(b);\n    d.body.appendChild(a);\n    b.href = base || document.baseURI || (document.querySelector(\"base\") || {}).href || location.href;\n    a.href = url;\n    return a.href;\n}\n\nfunction matchesSelector(elm, selector) {\n    var matches = elm.matches || elm.matchesSelector || elm.webkitMatchesSelector || elm.mozMatchesSelector || elm.msMatchesSelector || elm.oMatchesSelector;\n    return matches.call(elm, selector);\n}\n\nexport { getCssData as default };\n//# sourceMappingURL=get-css-data.esm.js.map\n","'use strict';\nmodule.exports = balanced;\nfunction balanced(a, b, str) {\n  if (a instanceof RegExp) a = maybeMatch(a, str);\n  if (b instanceof RegExp) b = maybeMatch(b, str);\n\n  var r = range(a, b, str);\n\n  return r && {\n    start: r[0],\n    end: r[1],\n    pre: str.slice(0, r[0]),\n    body: str.slice(r[0] + a.length, r[1]),\n    post: str.slice(r[1] + b.length)\n  };\n}\n\nfunction maybeMatch(reg, str) {\n  var m = str.match(reg);\n  return m ? m[0] : null;\n}\n\nbalanced.range = range;\nfunction range(a, b, str) {\n  var begs, beg, left, right, result;\n  var ai = str.indexOf(a);\n  var bi = str.indexOf(b, ai + 1);\n  var i = ai;\n\n  if (ai >= 0 && bi > 0) {\n    if(a===b) {\n      return [ai, bi];\n    }\n    begs = [];\n    left = str.length;\n\n    while (i >= 0 && !result) {\n      if (i == ai) {\n        begs.push(i);\n        ai = str.indexOf(a, i + 1);\n      } else if (begs.length == 1) {\n        result = [ begs.pop(), bi ];\n      } else {\n        beg = begs.pop();\n        if (beg < left) {\n          left = beg;\n          right = bi;\n        }\n\n        bi = str.indexOf(b, i + 1);\n      }\n\n      i = ai < bi && ai >= 0 ? ai : bi;\n    }\n\n    if (begs.length) {\n      result = [ left, right ];\n    }\n  }\n\n  return result;\n}\n","/**\n * Based on css parser/compiler by NxChg\n * https://github.com/NxtChg/pieces/tree/master/js/css_parser\n */\n\n\n// Dependencies\n// =============================================================================\nimport balanced from 'balanced-match';\n\n\n// Functions\n// =============================================================================\n/**\n * Parses CSS string and generates AST object\n *\n * @param {string}  css The CSS string to be converted to an AST\n * @param {object}  [options] Options object\n * @param {boolean} [options.preserveStatic=true] Determines if CSS\n *                  declarations that do not reference a custom property will\n *                  be preserved in the transformed CSS\n * @param {boolean} [options.removeComments=false] Remove comments from returned\n *                  object\n * @returns {object}\n */\nfunction parseCss(css, options = {}) {\n    const defaults = {\n        preserveStatic: true,\n        removeComments: false\n    };\n    const settings = Object.assign({}, defaults, options);\n    const errors   = [];\n\n    // Errors\n    // -------------------------------------------------------------------------\n    function error(msg) {\n        throw new Error(`CSS parse error: ${msg}`);\n    }\n\n    // RegEx\n    // -------------------------------------------------------------------------\n    // Match regexp and return captures\n    function match(re) {\n        const m = re.exec(css);\n\n        if (m) {\n            css = css.slice(m[0].length);\n\n            return m;\n        }\n    }\n\n    function open() {\n        return match(/^{\\s*/);\n    }\n\n    function close() {\n        return match(/^}/);\n    }\n\n    function whitespace() {\n        match(/^\\s*/);\n    }\n\n    // Comments\n    // -------------------------------------------------------------------------\n    function comment() {\n        whitespace();\n\n        if (css[0] !== '/' || css[1] !== '*') {\n            return;\n        }\n\n        let i = 2;\n\n        while (css[i] && (css[i] !== '*' || css[i + 1] !== '/')) {\n            i++;\n        }\n\n        if (!css[i]) {\n            return error('end of comment is missing');\n        }\n\n        const str = css.slice(2, i);\n\n        css = css.slice(i + 2);\n\n        return {\n            type   : 'comment',\n            comment: str\n        };\n    }\n\n    function comments() {\n        const cmnts = [];\n        let c;\n\n        while ((c = comment())) {\n            cmnts.push(c);\n        }\n\n        return settings.removeComments ? [] : cmnts;\n    }\n\n    // Selector\n    // -------------------------------------------------------------------------\n    function selector() {\n        whitespace();\n\n        while (css[0] === '}') {\n            error('extra closing bracket');\n        }\n\n        // Match selector\n        const m = match(/^((\"(?:\\\\\"|[^\"])*\"|'(?:\\\\'|[^'])*'|[^{])+)/);\n\n        if (m) {\n            let selector = m[0].trim();\n            let selectorItems;\n\n            const hasComment = /\\/\\*/.test(selector);\n\n            if (hasComment) {\n                // Remove comments\n                selector = selector.replace(/\\/\\*([^*]|[\\r\\n]|(\\*+([^*/]|[\\r\\n])))*\\*\\/+/g, '');\n            }\n\n            const hasCommaInQuotes = /[\"']\\w*,\\w*[\"']/.test(selector);\n\n            if (hasCommaInQuotes) {\n                // Replace comma in comma-separated lists with marker\n                selector = selector.replace(/\"(?:\\\\\"|[^\"])*\"|'(?:\\\\'|[^'])*'/g, function(m) {\n                    return m.replace(/,/g, '\\u200C');\n                });\n            }\n\n            const hasMultipleSelectors = /,/.test(selector);\n\n            // Create array of selectors\n            if (hasMultipleSelectors) {\n                // From comma-separated list\n                selectorItems = selector.split(/\\s*(?![^(]*\\)),\\s*/);\n            }\n            else {\n                selectorItems = [selector];\n            }\n\n            if (hasCommaInQuotes) {\n                // Restore comma in comma-separated lists\n                selectorItems = selectorItems.map(function(s) {\n                    return s.replace(/\\u200C/g, ',');\n                });\n            }\n\n            return selectorItems;\n        }\n    }\n\n    // Declarations\n    // -------------------------------------------------------------------------\n    function declaration() {\n        // Nested @ rule(s)\n        if (css[0] === '@') {\n            return at_rule();\n        }\n\n        match(/^([;\\s]*)+/); // ignore empty declarations + whitespace\n\n        const comment_regexp = /\\/\\*[^*]*\\*+([^/*][^*]*\\*+)*\\//g;\n        let prop = match(/^(\\*?[-#/*\\\\\\w.]+(\\[[0-9a-z_-]+\\])?)\\s*/);\n\n        if (!prop) {\n            return;\n        }\n\n        prop = prop[0].trim();\n\n        if (!match(/^:\\s*/)) {\n            return error('property missing \\':\\'');\n        }\n\n        // Quotes regex repeats verbatim inside and outside parentheses\n        const val = match(/^((?:\\/\\*.*?\\*\\/|'(?:\\\\'|.)*?'|\"(?:\\\\\"|.)*?\"|\\((\\s*'(?:\\\\'|.)*?'|\"(?:\\\\\"|.)*?\"|[^)]*?)\\s*\\)|[^};])+)/);\n        const ret = {\n            type    : 'declaration',\n            property: prop.replace(comment_regexp, ''),\n            value   : val ? val[0].replace(comment_regexp, '').trim() : ''\n        };\n\n        match(/^[;\\s]*/);\n\n        return ret;\n    }\n\n    function declarations() {\n        if (!open()) {\n            return error('missing \\'{\\'');\n        }\n\n        let d;\n        let decls = comments();\n\n        while ((d = declaration())) {\n            decls.push(d);\n            decls = decls.concat(comments());\n        }\n\n        if (!close()) {\n            return error('missing \\'}\\'');\n        }\n\n        return decls;\n    }\n\n    // Keyframes\n    // -------------------------------------------------------------------------\n    function keyframe() {\n        whitespace();\n\n        const vals = [];\n        let m;\n\n        while ((m = match(/^((\\d+\\.\\d+|\\.\\d+|\\d+)%?|[a-z]+)\\s*/))) {\n            vals.push(m[1]);\n            match(/^,\\s*/);\n        }\n\n        if (vals.length) {\n            return {\n                type        : 'keyframe',\n                values      : vals,\n                declarations: declarations()\n            };\n        }\n    }\n\n    function at_keyframes() {\n        let m = match(/^@([-\\w]+)?keyframes\\s*/);\n\n        if (!m) {\n            return;\n        }\n\n        const vendor = m[1];\n\n        m = match(/^([-\\w]+)\\s*/);\n\n        if (!m) {\n            return error('@keyframes missing name');\n        }\n\n        const name = m[1];\n\n        if (!open()) {\n            return error('@keyframes missing \\'{\\'');\n        }\n\n        let frame;\n        let frames = comments();\n\n        while ((frame = keyframe())) {\n            frames.push(frame);\n            frames = frames.concat(comments());\n        }\n\n        if (!close()) {\n            return error('@keyframes missing \\'}\\'');\n        }\n\n        return {\n            type     : 'keyframes',\n            name     : name,\n            vendor   : vendor,\n            keyframes: frames\n        };\n    }\n\n    // @ Rules\n    // -------------------------------------------------------------------------\n    function at_page() {\n        const m = match(/^@page */);\n        if (m) {\n            const sel = selector() || [];\n            return { type: 'page', selectors: sel, declarations: declarations() };\n        }\n    }\n    function at_page_margin_box() {\n        const m = match(/@(top|bottom|left|right)-(left|center|right|top|middle|bottom)-?(corner)?\\s*/);\n        if (m) {\n            const name = `${m[1]}-${m[2]}` + (m[3] ? `-${m[3]}` : '');\n            return { type: 'page-margin-box', name, declarations: declarations() };\n        }\n    }\n    function at_fontface() {\n        const m = match(/^@font-face\\s*/);\n        if (m) { return { type: 'font-face', declarations: declarations() }; }\n    }\n    function at_supports() {\n        const m = match(/^@supports *([^{]+)/);\n        if (m) { return { type: 'supports', supports: m[1].trim(), rules: rules() }; }\n    }\n    function at_host() {\n        const m = match(/^@host\\s*/);\n        if (m) { return { type: 'host', rules: rules() }; }\n    }\n    function at_media() {\n        const m = match(/^@media([^{]+)*/);\n        if (m) { return { type: 'media', media: (m[1] || '').trim(), rules: rules() }; }\n    }\n    function at_custom_m() {\n        const m = match(/^@custom-media\\s+(--[^\\s]+)\\s*([^{;]+);/);\n        if (m) { return { type: 'custom-media', name: m[1].trim(), media: m[2].trim() }; }\n    }\n    function at_document() {\n        const m = match(/^@([-\\w]+)?document *([^{]+)/);\n        if (m) { return { type: 'document', document: m[2].trim(), vendor: m[1] ? m[1].trim() : null, rules: rules() }; }\n    }\n    function at_x() {\n        const m = match(/^@(import|charset|namespace)\\s*([^;]+);/);\n        if (m) { return { type: m[1], name: m[2].trim() }; }\n    }\n    function at_rule() {\n        whitespace();\n\n        if (css[0] === '@') {\n            const ret =\n                at_x() ||\n                at_fontface() ||\n                at_media() ||\n                at_keyframes() ||\n                at_supports() ||\n                at_document() ||\n                at_custom_m() ||\n                at_host() ||\n                at_page() ||\n                at_page_margin_box(); // Must be last\n\n            if (ret && !settings.preserveStatic) {\n                let hasVarFunc = false;\n\n                // @page, @font-face\n                if (ret.declarations) {\n                    hasVarFunc = ret.declarations.some(decl => /var\\(/.test(decl.value));\n                }\n                // @keyframes, @media, @supports, etc.\n                else {\n                    const arr = ret.keyframes || ret.rules || [];\n\n                    hasVarFunc = arr.some(obj => (obj.declarations || []).some(decl => /var\\(/.test(decl.value)));\n                }\n\n                return hasVarFunc ? ret : {};\n            }\n\n            return ret;\n        }\n    }\n\n    // Rules\n    // -------------------------------------------------------------------------\n    function rule() {\n        if (!settings.preserveStatic) {\n            const balancedMatch = balanced('{', '}', css);\n\n            // Skip rulset if it does not contain a root/host variable\n            // declaration or a variable function value\n            if (balancedMatch) {\n                const hasVarDecl = /:(?:root|host)(?![.:#(])/.test(balancedMatch.pre) && /--\\S*\\s*:/.test(balancedMatch.body);\n                const hasVarFunc = /var\\(/.test(balancedMatch.body);\n\n                if (!hasVarDecl && !hasVarFunc) {\n                    css = css.slice(balancedMatch.end + 1);\n\n                    return {};\n                }\n            }\n        }\n\n        const sel   = selector() || [];\n        const decls = settings.preserveStatic ? declarations() : declarations().filter(decl => {\n            const hasVarDecl = sel.some(s => /:(?:root|host)(?![.:#(])/.test(s)) && /^--\\S/.test(decl.property);\n            const hasVarFunc = /var\\(/.test(decl.value);\n\n            return hasVarDecl || hasVarFunc;\n        });\n\n        if (!sel.length) {\n            error('selector missing');\n        }\n\n        return {\n            type        : 'rule',\n            selectors   : sel,\n            declarations: decls\n        };\n    }\n\n    function rules(core) {\n        if (!core && !open()) {\n            return error('missing \\'{\\'');\n        }\n\n        let node;\n        let rules = comments();\n\n        while (css.length && (core || css[0] !== '}') && (node = at_rule() || rule())) {\n            if (node.type) {\n                rules.push(node);\n            }\n\n            rules = rules.concat(comments());\n        }\n\n        if (!core && !close()) {\n            return error('missing \\'}\\'');\n        }\n\n        return rules;\n    }\n\n    return {\n        type: 'stylesheet',\n        stylesheet: {\n            rules: rules(true),\n            errors: errors\n        }\n    };\n}\n\n\n// Exports\n// =============================================================================\nexport default parseCss;\n","// Dependencies\n// =============================================================================\nimport parseCss from './parse-css';\n\n\n// Functions\n// =============================================================================\n/**\n * Description\n *\n * @param {object|string} cssData CSS data to parse\n * @param {object} [options] Options object\n * @param {object} [options.store={}] CSS variable definitions to include during\n *     transformation. Can be used to add new override exisitng definitions.\n * @param {function} [options.onWarning] Callback on each transformation\n *     warning. Passes 1) warningMessage as an argument.\n * @returns {object}\n */\nfunction parseVars(cssData, options = {}) {\n    const defaults = {\n        parseHost: false,\n        store    : {},\n        onWarning() {}\n    };\n    const settings           = Object.assign({}, defaults, options);\n    const reVarDeclSelectors = new RegExp(`:${ settings.parseHost ? 'host' : 'root' }$`);\n\n    // Convert CSS string to AST\n    if (typeof cssData === 'string') {\n        cssData = parseCss(cssData, settings);\n    }\n\n    // Define variables\n    cssData.stylesheet.rules.forEach(function(rule) {\n        const varNameIndices = [];\n\n        if (rule.type !== 'rule' || !rule.selectors.some(s => reVarDeclSelectors.test(s))) {\n            return;\n        }\n\n        rule.declarations.forEach(function(decl, i) {\n            const prop  = decl.property;\n            const value = decl.value;\n\n            if (prop && prop.indexOf('--') === 0) {\n                settings.store[prop] = value;\n                varNameIndices.push(i);\n            }\n        });\n    });\n\n    // Return variable store\n    return settings.store;\n}\n\n\n// Exports\n// =============================================================================\nexport default parseVars;\n","/**\n * Based on css parser/compiler by NxChg\n * https://github.com/NxtChg/pieces/tree/master/js/css_parser\n */\n\n\n// Functions\n// =============================================================================\n/**\n * Compiles CSS AST to string\n *\n * @param {object}   tree CSS AST object\n * @param {string}   [delim=''] CSS rule delimiter\n * @param {function} cb Function to be called before each node is processed\n * @returns {string}\n */\nfunction stringifyCss(tree, delim = '', cb) {\n    const renderMethods = {\n        charset(node) {\n            return '@charset ' + node.name + ';';\n        },\n        comment(node) {\n            // Preserve ponyfill marker comments\n            return node.comment.indexOf('__CSSVARSPONYFILL') === 0 ? '/*' + node.comment + '*/' : '';\n        },\n        'custom-media'(node) {\n            return '@custom-media ' + node.name + ' ' + node.media + ';';\n        },\n        declaration(node) {\n            return node.property + ':' + node.value + ';';\n        },\n        document(node) {\n            return '@' + (node.vendor || '') + 'document ' + node.document + '{' + visit(node.rules) + '}';\n        },\n        'font-face'(node) {\n            return '@font-face' + '{' + visit(node.declarations) + '}';\n        },\n        host(node) {\n            return '@host' + '{' + visit(node.rules) + '}';\n        },\n        import(node) {\n            // FIXED\n            return '@import ' + node.name + ';';\n        },\n        keyframe(node) {\n            return node.values.join(',') + '{' + visit(node.declarations) + '}';\n        },\n        keyframes(node) {\n            return '@' + (node.vendor || '') + 'keyframes ' + node.name + '{' + visit(node.keyframes) + '}';\n        },\n        media(node) {\n            return '@media ' + node.media + '{' + visit(node.rules) + '}';\n        },\n        namespace(node) {\n            return '@namespace ' + node.name + ';';\n        },\n        page(node) {\n            return '@page ' + (node.selectors.length ? node.selectors.join(', ') : '') + '{' + visit(node.declarations) + '}';\n        },\n        'page-margin-box'(node) {\n            return '@' + node.name + '{' + visit(node.declarations) + '}';\n        },\n        rule(node) {\n            const decls = node.declarations;\n\n            if (decls.length) {\n                return node.selectors.join(',') + '{' + visit(decls) + '}';\n            }\n        },\n        supports(node) {\n            // FIXED\n            return '@supports ' + node.supports + '{' + visit(node.rules) + '}';\n        }\n    };\n\n    function visit(nodes) {\n        let buf = '';\n\n        for (let i = 0; i < nodes.length; i++) {\n            const n = nodes[i];\n\n            if (cb) {\n                cb(n);\n            }\n\n            const txt = renderMethods[n.type](n);\n\n            if (txt) {\n                buf += txt;\n\n                if (txt.length && n.selectors) {\n                    buf += delim;\n                }\n            }\n        }\n\n        return buf;\n    }\n\n    return visit(tree.stylesheet.rules);\n}\n\n\n// Exports\n// =============================================================================\nexport default stringifyCss;\n","/**\n * Based on rework-vars by reworkcss\n * https://github.com/reworkcss/rework-vars\n */\n\n\n// Dependencies\n// =============================================================================\nimport balanced     from 'balanced-match';\nimport parseCss     from './parse-css';\nimport stringifyCss from './stringify-css';\nimport walkCss      from './walk-css';\n\n\n// Constants & Variables\n// =============================================================================\nconst VAR_PROP_IDENTIFIER = '--';\nconst VAR_FUNC_IDENTIFIER = 'var';\n\n\n// Functions\n// =============================================================================\n/**\n * Transforms W3C-style CSS variables to static values and returns an updated\n * CSS string.\n *\n * @param {object}   cssData CSS text or AST\n * @param {object}   [options] Options object\n * @param {boolean}  [options.preserveStatic=true] Determines if CSS\n *                   declarations that do not reference a custom property will\n *                   be preserved in the transformed CSS\n * @param {boolean}  [options.preserveVars=false] Determines if CSS custom\n *                   property declarations will be preserved in the transformed\n *                   CSS\n * @param {object}   [options.variables={}] CSS variable definitions to include\n *                   during transformation. Can be used to add new override\n *                   exisitng definitions.\n * @param {function} [options.onWarning] Callback on each transformation\n *                   warning. Passes 1) warningMessage as an argument.\n * @returns {string}\n */\nfunction transformCss(cssData, options = {}) {\n    const defaults = {\n        preserveStatic: true,\n        preserveVars  : false,\n        variables     : {},\n        onWarning() {}\n    };\n    const settings = Object.assign({}, defaults, options);\n\n    // Convert CSS string to AST\n    if (typeof cssData === 'string') {\n        cssData = parseCss(cssData, settings);\n    }\n\n    // Resolve variables\n    walkCss(cssData.stylesheet, function(declarations, node) {\n        for (let i = 0; i < declarations.length; i++) {\n            const decl  = declarations[i];\n            const type  = decl.type;\n            const prop  = decl.property;\n            const value = decl.value;\n\n            // Skip comments\n            if (type !== 'declaration') {\n                continue;\n            }\n\n            // Remove custom property declarations\n            if (!settings.preserveVars && prop && prop.indexOf(VAR_PROP_IDENTIFIER) === 0) {\n                declarations.splice(i, 1);\n                i--;\n                continue;\n            }\n\n            // Transform custom property functions\n            if (value.indexOf(VAR_FUNC_IDENTIFIER + '(') !== -1) {\n                let resolvedValue = resolveValue(value, settings);\n\n                if (resolvedValue !== decl.value) {\n                    // Fix nested calc\n                    resolvedValue = fixNestedCalc(resolvedValue);\n\n                    // Overwrite value\n                    if (!settings.preserveVars) {\n                        decl.value = resolvedValue;\n                    }\n                    // Insert new rule with resolved value\n                    else {\n                        declarations.splice(i, 0, {\n                            type    : type,\n                            property: prop,\n                            value   : resolvedValue\n                        });\n\n                        // Skip ahead of preserved declaration\n                        i++;\n                    }\n                }\n            }\n        }\n    });\n\n    // Return CSS string\n    return stringifyCss(cssData);\n}\n\n\n// Functions (Private)\n// =============================================================================\n/**\n * Removes nested calc keywords for legacy browser compatibility.\n * Example: calc(1 + calc(2 + calc(3 + 3))) => calc(1 + (2 + (3 + 3)))\n *\n * @param {value} string\n */\nfunction fixNestedCalc(value) {\n    const reCalcVal = /calc\\(([^)]+)\\)/g;\n\n    (value.match(reCalcVal) || []).forEach(match => {\n        const newVal = `calc${match.split('calc').join('')}`;\n        value = value.replace(match, newVal);\n    });\n\n    return value;\n}\n\n/**\n * Resolves CSS var() function(s) with `settings.variables` or fallback\n * value(s). Returns original `value` if unable to resolve.\n *\n * @param {string} value String containing CSS var() functions to resolve\n * @param {object} settings Settings object passed from transformCss()\n * @param {string} [__recursiveFallback] Fallback when unable to resolve CSS\n *                 var() function to a `settings.variables` or fallback value.\n *                 Allows restoring original var() function from recursive\n *                 resolveValue() calls.\n * @return {string} CSS value with var() function(s) resolved to\n *                  `settings.variables` or fallback value.\n *\n * @example\n *\n *   resolveValue('10px var(--x) 30px', {'--x':'20px'}, {...settings});\n *   // => '10px 20px 30px'\n *\n *   resolveValue('10px', {}, {...settings});\n *   // => '10px'\n */\nfunction resolveValue(value, settings = {}, __recursiveFallback) {\n    if (value.indexOf('var(') === -1) {\n        return value;\n    }\n\n    const valueData = balanced('(', ')', value);\n\n    /**\n     * Resolves contents of CSS custom property function\n     *\n     * @param {string} value String containing contents of CSS var() function\n     * @returns {string}\n     *\n     * @example\n     *\n     *   resolveFunc('--x, var(--y, green)')\n     *   // => obj['--x'] or obj['--y'] or 'green'\n     *\n     *   resolveFunc('--fail')\n     *   // => 'var(--fail)' when obj['--fail'] does not exist\n     */\n    function resolveFunc(value) {\n        const name               = value.split(',')[0].replace(/[\\s\\n\\t]/g, '');\n        const fallback           = (value.match(/(?:\\s*,\\s*){1}(.*)?/) || [])[1];\n        const match              = Object.prototype.hasOwnProperty.call(settings.variables, name) ? String(settings.variables[name]) : undefined;\n        const replacement        = match || (fallback ? String(fallback) : undefined);\n        const unresolvedFallback = __recursiveFallback || value;\n\n        if (!match) {\n            settings.onWarning(`variable \"${name}\" is undefined`);\n        }\n\n        if (replacement && replacement !== 'undefined' && replacement.length > 0) {\n            return resolveValue(replacement, settings, unresolvedFallback);\n        }\n        else {\n            return `var(${unresolvedFallback})`;\n        }\n    }\n\n    // No balanced brace data\n    if (!valueData) {\n        if (value.indexOf('var(') !== -1) {\n            settings.onWarning(`missing closing \")\" in the value \"${value}\"`);\n        }\n\n        return value;\n    }\n    // Balanced brace data is var() function\n    else if (valueData.pre.slice(-3) === 'var') {\n        const isEmptyVarFunc = valueData.body.trim().length === 0;\n\n        if (isEmptyVarFunc) {\n            settings.onWarning('var() must contain a non-whitespace string');\n\n            return value;\n        }\n        else {\n            return (\n                valueData.pre.slice(0,-3)\n                + resolveFunc(valueData.body)\n                + resolveValue(valueData.post, settings)\n            );\n        }\n    }\n    // Balanced brace data is NOT var() function\n    else {\n        return (\n            valueData.pre\n            + `(${resolveValue(valueData.body, settings)})`\n            + resolveValue(valueData.post, settings)\n        );\n    }\n}\n\n\n// Exports\n// =============================================================================\nexport default transformCss;\n","/**\n * Based on rework-visit by reworkcss\n * https://github.com/reworkcss/rework-visit\n */\n\n\n// Functions\n// =============================================================================\n/**\n * Visit `node` declarations recursively and invoke `fn(declarations, node)`.\n *\n * @param {object} node\n * @param {function} fn\n */\nfunction walkCss(node, fn){\n    node.rules.forEach(function(rule){\n        // @media etc\n        if (rule.rules) {\n            walkCss(rule, fn);\n\n            return;\n        }\n\n        // keyframes\n        if (rule.keyframes) {\n            rule.keyframes.forEach(function(keyframe){\n                if (keyframe.type === 'keyframe') {\n                    fn(keyframe.declarations, rule);\n                }\n            });\n\n            return;\n        }\n\n        // @charset, @import etc\n        if (!rule.declarations) {\n            return;\n        }\n\n        fn(rule.declarations, node);\n    });\n}\n\n\n// Exports\n// =============================================================================\nexport default walkCss;\n","// Dependencies\n// =============================================================================\nimport getCssData   from 'get-css-data';\nimport parseCss     from './parse-css';\nimport parseVars    from './parse-vars';\nimport stringifyCss from './stringify-css';\nimport transformCss from './transform-css';\n\n\n// Constants & Variables\n// =============================================================================\nconst isBrowser       = typeof window !== 'undefined';\nconst isNativeSupport = isBrowser && window.CSS && window.CSS.supports && window.CSS.supports('(--a: 0)');\n\nconst counters = {\n    group: 0,\n    job  : 0\n};\nconst defaults = {\n    // Targets\n    rootElement   : isBrowser ? document : null,\n    shadowDOM     : false,\n    // Sources\n    include       : 'style,link[rel=stylesheet]',\n    exclude       : '',\n    variables     : {},    // cssVars, transformCss\n    // Options\n    onlyLegacy    : true,  // cssVars\n    preserveStatic: true,  // parseCSS\n    preserveVars  : false, // transformCss\n    silent        : false, // cssVars\n    updateDOM     : true,  // cssVars\n    updateURLs    : true,  // cssVars\n    watch         : null,  // cssVars\n    // Callbacks\n    onBeforeSend() {},     // cssVars\n    onError() {},          // cssVars\n    onWarning() {},        // transformCss\n    onSuccess() {},        // cssVars\n    onComplete() {},       // cssVars\n    onFinally() {}         // cssVars\n};\nconst regex = {\n    // CSS comments\n    cssComments: /\\/\\*[\\s\\S]+?\\*\\//g,\n    // CSS keyframes\n    // Ex: @keyframes & @-VENDOR-keyframes\n    cssKeyframes: /@(?:-\\w*-)?keyframes/,\n    // CSS media queries\n    // Ex: @media (min-width: 640px) { ... }\n    cssMediaQueries: /@media[^{]+\\{([\\s\\S]+?})\\s*}/g,\n    // CSS Urls\n    // Ex: url('path/to/file')\n    cssUrls: /url\\((?!['\"]?(?:data|http|\\/\\/):)['\"]?([^'\")]*)['\"]?\\)/g,\n    // CSS root/host rules\n    // Ex: :root { ... } or :host { ... }\n    cssVarDeclRules: /(?::(?:root|host)(?![.:#(])[\\s,]*[^{]*{\\s*[^}]*})/g,\n    // CSS variable declarations (e.g. --color: red;)\n    cssVarDecls: /(?:[\\s;]*)(-{2}\\w[\\w-]*)(?:\\s*:\\s*)([^;]*);/g,\n    // CSS variable function (e.g. var(--color))\n    cssVarFunc: /var\\(\\s*--[\\w-]/,\n    // CSS variable root/host declarations and var() function values\n    cssVars: /(?:(?::(?:root|host)(?![.:#(])[\\s,]*[^{]*{\\s*[^;]*;*\\s*)|(?:var\\(\\s*))(--[^:)]+)(?:\\s*[:)])/\n};\nconst variableStore = {\n    // Parsed DOM values (from <link> and <style> nodes)\n    dom : {},\n    // Temporary storage for each job\n    job : {},\n    // Persisted options.variables values\n    user: {}\n};\n\n// Flag used to prevent successive ponyfill calls from stacking\nlet cssVarsIsRunning = false;\n\n// Mutation observer reference created via options.watch\nlet cssVarsObserver = null;\n\n// Count used to detect manual removal of [data-cssvars=\"src\"] nodes\nlet cssVarsSrcNodeCount = 0;\n\n// Debounce timer used with options.watch\nlet debounceTimer = null;\n\n// Flag used to indicate if document-level custom property values have been\n// parsed, stored, and ready for use with options.shadowDOM\nlet isShadowDOMReady = false;\n\n\n// Functions\n// =============================================================================\n/**\n * Fetches, parses, and transforms CSS custom properties from specified\n * <style> and <link> elements into static values, then appends a new <style>\n * element with static values to the DOM to provide CSS custom property\n * compatibility for legacy browsers. Also provides a single interface for\n * live updates of runtime values in both modern and legacy browsers.\n *\n * @preserve\n * @param {object}   [options] Options object\n * @param {object}   [options.rootElement=document] Root element to traverse for\n *                   <link> and <style> nodes\n * @param {boolean}  [options.shadowDOM=false] Determines if shadow DOM <link>\n *                   and <style> nodes will be processed.\n * @param {string}   [options.include=\"style,link[rel=stylesheet]\"] CSS selector\n *                   matching <link re=\"stylesheet\"> and <style> nodes to\n *                   process\n * @param {string}   [options.exclude] CSS selector matching <link\n *                   rel=\"stylehseet\"> and <style> nodes to exclude from those\n *                   matches by options.include\n * @param {object}   [options.variables] A map of custom property name/value\n *                   pairs. Property names can omit or include the leading\n *                   double-hyphen (—), and values specified will override\n *                   previous values\n * @param {boolean}  [options.onlyLegacy=true] Determines if the ponyfill will\n *                   only generate legacy-compatible CSS in browsers that lack\n *                   native support (i.e., legacy browsers)\n * @param {boolean}  [options.preserveStatic=true] Determines if CSS\n *                   declarations that do not reference a custom property will\n *                   be preserved in the transformed CSS\n * @param {boolean}  [options.preserveVars=false] Determines if CSS custom\n *                   property declarations will be preserved in the transformed\n *                   CSS\n * @param {boolean}  [options.silent=false] Determines if warning and error\n *                   messages will be displayed on the console\n * @param {boolean}  [options.updateDOM=true] Determines if the ponyfill will\n *                   update the DOM after processing CSS custom properties\n * @param {boolean}  [options.updateURLs=true] Determines if relative url()\n *                   paths will be converted to absolute urls in external CSS\n * @param {boolean}  [options.watch=false] Determines if a MutationObserver will\n *                   be created that will execute the ponyfill when a <link> or\n *                   <style> DOM mutation is observed\n * @param {function} [options.onBeforeSend] Callback before XHR is sent. Passes\n *                   1) the XHR object, 2) source node reference, and 3) the\n *                   source URL as arguments\n * @param {function} [options.onError] Callback after a CSS parsing error has\n *                   occurred or an XHR request has failed. Passes 1) an error\n *                   message, and 2) source node reference, 3) xhr, and 4 url as\n *                   arguments.\n * @param {function} [options.onWarning] Callback after each CSS parsing warning\n *                   has occurred. Passes 1) a warning message as an argument.\n * @param {function} [options.onSuccess] Callback after CSS data has been\n *                   collected from each node and before CSS custom properties\n *                   have been transformed. Allows modifying the CSS data before\n *                   it is transformed by returning any string value (or false\n *                   to skip). Passes 1) CSS text, 2) source node reference, and\n *                   3) the source URL as arguments.\n * @param {function} [options.onComplete] Callback after all CSS has been\n *                   processed, legacy-compatible CSS has been generated, and\n *                   (optionally) the DOM has been updated. Passes 1) a CSS\n *                   string with CSS variable values resolved, 2) an array of\n *                   output <style> node references that have been appended to\n *                   the DOM, 3) an object containing all custom properies names\n *                   and values, and 4) the ponyfill execution time in\n *                   milliseconds.\n * @param {function} [options.onFinally] Callback in modern and legacy browsers\n *                   after the ponyfill has finished all tasks. Passes 1) a\n *                   boolean indicating if the last ponyfill call resulted in a\n *                   style change, 2) a boolean indicating if the current\n *                   browser provides native support for CSS custom properties,\n *                   and 3) the ponyfill execution time in milliseconds.\n * @example\n *\n *   cssVars({\n *     rootElement   : document,\n *     shadowDOM     : false,\n *     include       : 'style,link[rel=\"stylesheet\"]',\n *     exclude       : '',\n *     variables     : {},\n *     onlyLegacy    : true,\n *     preserveStatic: true,\n *     preserveVars  : false,\n *     silent        : false,\n *     updateDOM     : true,\n *     updateURLs    : true,\n *     watch         : false,\n *     onBeforeSend(xhr, node, url) {},\n *     onError(message, node, xhr, url) {},\n *     onWarning(message) {},\n *     onSuccess(cssText, node, url) {},\n *     onComplete(cssText, styleNode, cssVariables, benchmark) {},\n *     onFinally(hasChanged, hasNativeSupport, benchmark)\n *   });\n */\nfunction cssVars(options = {}) {\n    const msgPrefix = 'cssVars(): ';\n    const settings  = Object.assign({}, defaults, options);\n\n    function handleError(message, sourceNode, xhr, url) {\n        /* istanbul ignore next */\n        if (!settings.silent && window.console) {\n            // eslint-disable-next-line\n            console.error(`${msgPrefix}${message}\\n`, sourceNode);\n        }\n\n        settings.onError(message, sourceNode, xhr, url);\n    }\n\n    function handleWarning(message) {\n        /* istanbul ignore next */\n        if (!settings.silent && window.console) {\n            // eslint-disable-next-line\n            console.warn(`${msgPrefix}${message}`);\n        }\n\n        settings.onWarning(message);\n    }\n\n    function handleFinally(hasChanged) {\n        settings.onFinally(\n            Boolean(hasChanged),\n            isNativeSupport,\n            getTimeStamp() - settings.__benchmark\n        );\n    }\n\n    // Exit if non-browser environment (e.g. Node)\n    if (!isBrowser) {\n        return;\n    }\n\n    // Add / recreate MutationObserver\n    if (settings.watch) {\n        settings.watch = defaults.watch;\n        addMutationObserver(settings);\n        cssVars(settings);\n        return;\n    }\n    // Disconnect existing MutationObserver\n    else if (settings.watch === false && cssVarsObserver) {\n        cssVarsObserver.disconnect();\n        cssVarsObserver = null;\n    }\n\n    // If benchmark key is not availalbe, this is a non-recursive call\n    if (!settings.__benchmark) {\n        // Check flag and debounce to prevent successive call from stacking\n        if (cssVarsIsRunning === settings.rootElement) {\n            cssVarsDebounced(options);\n            return;\n        }\n\n        const srcNodes = [].slice.call(settings.rootElement.querySelectorAll('[data-cssvars]:not([data-cssvars=\"out\"])'));\n\n        // Store benchmark start time\n        settings.__benchmark = getTimeStamp();\n\n        // Exclude previously processed elements\n        settings.exclude = [\n            // 1. When the ponyfill is called by the MutationObserver, all\n            //    previously processed nodes are exluded except those that have\n            //    had their out/skip/src values cleared by the MutationObserver.\n            // 2. When the ponyfill is called directly, only output nodes are\n            //    excluded. This allows the ponyfill to update skip/src nodes\n            //    after a previously processed link/style node has been removed.\n            cssVarsObserver ? '[data-cssvars]:not([data-cssvars=\"\"])' : '[data-cssvars=\"out\"]',\n            'link[disabled]:not([data-cssvars])',\n            settings.exclude\n        ].filter(selector => selector).join(',');\n\n        // Fix malformed custom property names (e.g. \"color\" or \"-color\")\n        settings.variables = fixVarNames(settings.variables);\n\n        // Reset previously processed <style> nodes if textContent has changed\n        srcNodes.forEach(srcNode => {\n            const hasStyleCache = srcNode.nodeName.toLowerCase() === 'style' && srcNode.__cssVars.text;\n            const hasStyleChanged = hasStyleCache && srcNode.textContent !== srcNode.__cssVars.text;\n\n            if (hasStyleCache && hasStyleChanged) {\n                srcNode.sheet && (srcNode.sheet.disabled = false);\n                srcNode.setAttribute('data-cssvars', '');\n            }\n        });\n\n        // Direct call preparation (i.e. non-MutationObserver call)\n        if (!cssVarsObserver) {\n            const outNodes = [].slice.call(settings.rootElement.querySelectorAll('[data-cssvars=\"out\"]'));\n\n            // Remove orphaned output nodes\n            outNodes.forEach(outNode => {\n                const dataGroup = outNode.getAttribute('data-cssvars-group');\n                const srcNode   = dataGroup ? settings.rootElement.querySelector(`[data-cssvars=\"src\"][data-cssvars-group=\"${dataGroup}\"]`) : null;\n\n                if (!srcNode) {\n                    outNode.parentNode.removeChild(outNode);\n                }\n            });\n\n            // Handle removed source nodes\n            if (cssVarsSrcNodeCount && (srcNodes.length < cssVarsSrcNodeCount)) {\n                // Update source node count\n                cssVarsSrcNodeCount = srcNodes.length;\n\n                // Reset variableStore\n                variableStore.dom = {};\n            }\n        }\n    }\n\n    // Verify readyState to ensure all <link> and <style> nodes are available\n    if (document.readyState !== 'loading') {\n        // Native support\n        if (isNativeSupport && settings.onlyLegacy) {\n            let hasVarChange = false;\n\n            // Apply settings.variables\n            if (settings.updateDOM) {\n                const targetElm = settings.rootElement.host || (settings.rootElement === document ? document.documentElement : settings.rootElement);\n\n                // Set variables using native methods\n                Object.keys(settings.variables).forEach(key => {\n                    const varValue = settings.variables[key];\n\n                    hasVarChange = hasVarChange || varValue !== getComputedStyle(targetElm).getPropertyValue(key);\n                    targetElm.style.setProperty(key, varValue);\n                });\n            }\n\n            handleFinally(hasVarChange);\n        }\n        // Ponyfill: Handle rootElement set to a shadow host or root\n        else if (!isShadowDOMReady && (settings.shadowDOM || settings.rootElement.shadowRoot || settings.rootElement.host)) {\n            // Get all document-level CSS\n            getCssData({\n                rootElement : defaults.rootElement,\n                include     : defaults.include,\n                exclude     : settings.exclude,\n                skipDisabled: false,\n                onSuccess(cssText, node, url) {\n                    const isUserDisabled = (node.sheet || {}).disabled && !node.__cssVars;\n\n                    if (isUserDisabled) {\n                        return false;\n                    }\n\n                    cssText = cssText\n                        .replace(regex.cssComments, '')\n                        .replace(regex.cssMediaQueries, '');\n\n                    cssText = (cssText.match(regex.cssVarDeclRules) || []).join('');\n\n                    // Return only matching :root {...} blocks\n                    return cssText || false;\n                },\n                onComplete(cssText, cssArray, nodeArray) {\n                    // Parse variables and store in variableStore. This step\n                    // ensures that variableStore contains all document-level\n                    // custom property values for subsequent ponyfill calls.\n                    parseVars(cssText, {\n                        store    : variableStore.dom,\n                        onWarning: handleWarning\n                    });\n\n                    isShadowDOMReady = true;\n\n                    // Call the ponyfill again to process the rootElement\n                    // initially specified. Values stored in variableStore will\n                    // be used to transform values in shadow host/root elements.\n                    cssVars(settings);\n                }\n            });\n        }\n        // Ponyfill: Process CSS\n        else {\n            // Set flag to prevent successive call from stacking. Using the\n            // rootElement insead of `true` allows simultaneous ponyfill calls\n            // using different rootElement values (e.g. document and one-or-more\n            // shadowDOM nodes).\n            cssVarsIsRunning = settings.rootElement;\n\n            getCssData({\n                rootElement : settings.rootElement,\n                include     : settings.include,\n                exclude     : settings.exclude,\n                skipDisabled: false,\n                onBeforeSend: settings.onBeforeSend,\n                onError(xhr, node, url) {\n                    const responseUrl = xhr.responseURL || getFullUrl(url, location.href);\n                    const statusText  = xhr.statusText ? `(${xhr.statusText})` : 'Unspecified Error' + (xhr.status === 0 ? ' (possibly CORS related)' : '');\n                    const errorMsg    = `CSS XHR Error: ${responseUrl} ${xhr.status} ${statusText}`;\n\n                    handleError(errorMsg, node, xhr, responseUrl);\n                },\n                onSuccess(cssText, node, url) {\n                    const isUserDisabled = (node.sheet || {}).disabled && !node.__cssVars;\n\n                    if (isUserDisabled) {\n                        return false;\n                    }\n\n                    const isLink        = node.nodeName.toLowerCase() === 'link';\n                    const isStyleImport = node.nodeName.toLowerCase() === 'style' && cssText !== node.textContent;\n                    const returnVal     = settings.onSuccess(cssText, node, url);\n\n                    // Use callback return value if provided (skip CSS if false)\n                    cssText = returnVal !== undefined && Boolean(returnVal) === false ? '' : returnVal || cssText;\n\n                    // Convert relative url(...) values to absolute\n                    if (settings.updateURLs && (isLink || isStyleImport)) {\n                        cssText = fixRelativeCssUrls(cssText, url);\n                    }\n\n                    return cssText;\n                },\n                onComplete(cssText, cssArray, nodeArray = []) {\n                    const currentVars = Object.assign({}, variableStore.dom, variableStore.user);\n\n                    let hasVarChange = false;\n\n                    // Reset temporary variable store\n                    variableStore.job = {};\n\n                    // Parse CSS and variables\n                    nodeArray.forEach((node, i) => {\n                        const nodeCSS = cssArray[i];\n\n                        // Node data cache\n                        node.__cssVars = node.__cssVars || {};\n                        node.__cssVars.text = nodeCSS;\n\n                        // Only process CSS contains a custom property\n                        // declarations or function\n                        if (regex.cssVars.test(nodeCSS)) {\n                            try {\n                                const cssTree = parseCss(nodeCSS, {\n                                    preserveStatic: settings.preserveStatic,\n                                    removeComments: true\n                                });\n\n                                // Parse variables\n                                parseVars(cssTree, {\n                                    parseHost: Boolean(settings.rootElement.host),\n                                    store    : variableStore.dom,\n                                    onWarning: handleWarning\n                                });\n\n                                // Cache data\n                                node.__cssVars.tree = cssTree;\n                            }\n                            catch(err) {\n                                handleError(err.message, node);\n                            }\n                        }\n                    });\n\n                    // Merge DOM values with job values\n                    Object.assign(variableStore.job, variableStore.dom);\n\n                    if (settings.updateDOM) {\n                        // Persist user values\n                        Object.assign(variableStore.user, settings.variables);\n\n                        // Merge persisted user values with job values\n                        Object.assign(variableStore.job, variableStore.user);\n                    }\n                    else {\n                        // Merge persisted and non-persisted user values with job values\n                        Object.assign(variableStore.job, variableStore.user, settings.variables);\n\n                        // Update currentVars with non-persisted user values\n                        Object.assign(currentVars, settings.variables);\n                    }\n\n                    // Detect new variable declaration or changed value\n                    hasVarChange =\n                        // Ponyfill has been called before with updateDOM\n                        counters.job > 0 &&\n                        // New/Change\n                        Boolean(\n                            // New declaration\n                            (Object.keys(variableStore.job).length > Object.keys(currentVars).length) ||\n                            // Changed declaration value\n                            Boolean(\n                                // Previous declarations exist\n                                Object.keys(currentVars).length &&\n                                // At least one job value does has changed\n                                Object.keys(variableStore.job).some(key => variableStore.job[key] !== currentVars[key])\n                            )\n                        );\n\n                    // New variable declaration or modified value detected\n                    if (hasVarChange) {\n                        resetCssNodes(settings.rootElement);\n                        cssVars(settings);\n                    }\n                    // No variable changes detected\n                    else {\n                        const outCssArray  = [];\n                        const outNodeArray = [];\n\n                        let hasKeyframesWithVars = false;\n\n                        // Increment job\n                        if (settings.updateDOM) {\n                            counters.job++;\n                        }\n\n                        nodeArray.forEach((node, i) => {\n                            let isSkip = !node.__cssVars.tree;\n\n                            if (node.__cssVars.tree) {\n                                try {\n                                    transformCss(node.__cssVars.tree, Object.assign({}, settings, {\n                                        variables: variableStore.job,\n                                        onWarning: handleWarning\n                                    }));\n\n                                    const outCss = stringifyCss(node.__cssVars.tree);\n\n                                    if (settings.updateDOM) {\n                                        const nodeCSS       = cssArray[i];\n                                        const hasCSSVarFunc = regex.cssVarFunc.test(nodeCSS);\n\n                                        if (!node.getAttribute('data-cssvars')) {\n                                            node.setAttribute('data-cssvars', 'src');\n                                        }\n\n                                        if (outCss.length && hasCSSVarFunc) {\n                                            const dataGroup      = node.getAttribute('data-cssvars-group') || ++counters.group;\n                                            const outCssNoSpaces = outCss.replace(/\\s/g,'');\n                                            const outNode        = settings.rootElement.querySelector(`[data-cssvars=\"out\"][data-cssvars-group=\"${dataGroup}\"]`) || document.createElement('style');\n\n                                            hasKeyframesWithVars = hasKeyframesWithVars || regex.cssKeyframes.test(outCss);\n\n                                            // Disable source stylesheet\n                                            if (settings.preserveStatic) {\n                                                node.sheet && (node.sheet.disabled = true);\n                                            }\n\n                                            if (!outNode.hasAttribute('data-cssvars')) {\n                                                outNode.setAttribute('data-cssvars', 'out');\n                                            }\n\n                                            // Non-transformed CSS\n                                            if (outCssNoSpaces === node.textContent.replace(/\\s/g,'')) {\n                                                isSkip = true;\n\n                                                if (outNode && outNode.parentNode) {\n                                                    node.removeAttribute('data-cssvars-group');\n                                                    outNode.parentNode.removeChild(outNode);\n                                                }\n                                            }\n                                            // Transformed CSS\n                                            else if (outCssNoSpaces !== outNode.textContent.replace(/\\s/g,'')) {\n                                                [node, outNode].forEach(n => {\n                                                    n.setAttribute('data-cssvars-job', counters.job);\n                                                    n.setAttribute('data-cssvars-group', dataGroup);\n                                                });\n                                                outNode.textContent = outCss;\n                                                outCssArray.push(outCss);\n                                                outNodeArray.push(outNode);\n\n                                                if (!outNode.parentNode) {\n                                                    node.parentNode.insertBefore(outNode, node.nextSibling);\n                                                }\n                                            }\n                                        }\n                                    }\n                                    else {\n                                        if (node.textContent.replace(/\\s/g,'') !== outCss) {\n                                            outCssArray.push(outCss);\n                                        }\n                                    }\n                                }\n                                catch(err) {\n                                    handleError(err.message, node);\n                                }\n                            }\n\n                            if (isSkip) {\n                                node.setAttribute('data-cssvars', 'skip');\n                            }\n\n                            if (!node.hasAttribute('data-cssvars-job')) {\n                                node.setAttribute('data-cssvars-job', counters.job);\n                            }\n                        });\n\n                        // Update source node count\n                        cssVarsSrcNodeCount = settings.rootElement.querySelectorAll('[data-cssvars]:not([data-cssvars=\"out\"])').length;\n\n                        // Process shadow DOM\n                        if (settings.shadowDOM) {\n                            const elms = []\n                                .concat(settings.rootElement)\n                                .concat([].slice.call(settings.rootElement.querySelectorAll('*')));\n\n                            // Iterates over all elements in rootElement and calls\n                            // cssVars on each shadowRoot, passing document-level\n                            // custom properties as options.variables.\n                            for (let i = 0, elm; (elm = elms[i]); ++i) {\n                                if (elm.shadowRoot && elm.shadowRoot.querySelector('style')) {\n                                    const shadowSettings = Object.assign({}, settings, {\n                                        rootElement: elm.shadowRoot\n                                    });\n\n                                    cssVars(shadowSettings);\n                                }\n                            }\n                        }\n\n                        // Fix keyframes\n                        if (settings.updateDOM && hasKeyframesWithVars) {\n                            fixKeyframes(settings.rootElement);\n                        }\n\n                        // Reset running flag. Must be done before onComplete\n                        // callback to avoid a callback error preventing the\n                        // flag from being reset after the callback.\n                        cssVarsIsRunning = false;\n\n                        // Callbacks\n                        settings.onComplete(\n                            outCssArray.join(''),\n                            outNodeArray,\n                            JSON.parse(JSON.stringify(variableStore.job)),\n                            getTimeStamp() - settings.__benchmark\n                        );\n\n                        handleFinally(outNodeArray.length);\n                    }\n                }\n            });\n        }\n    }\n    // Delay function until DOMContentLoaded event is fired\n    /* istanbul ignore next */\n    else {\n        document.addEventListener('DOMContentLoaded', function init(evt) {\n            cssVars(options);\n\n            document.removeEventListener('DOMContentLoaded', init);\n        });\n    }\n}\n\n// Ponyfill reset\ncssVars.reset = function() {\n    // Reset counters\n    counters.job = 0;\n    counters.group = 0;\n\n    // Reset running flag\n    cssVarsIsRunning = false;\n\n    // Disconnect MutationObserver\n    if (cssVarsObserver) {\n        cssVarsObserver.disconnect();\n        cssVarsObserver = null;\n    }\n\n    // Reset source node count\n    cssVarsSrcNodeCount = 0;\n\n    // Reset debounce timer\n    debounceTimer = null;\n\n    // Reset shadowDOM ready flag\n    isShadowDOMReady = false;\n\n    // Reset variable storage\n    for (const prop in variableStore) {\n        variableStore[prop] = {};\n    }\n};\n\n\n// Functions (Private)\n// =============================================================================\n/**\n * Creates mutation observer that executes the ponyfill when a <link> or <style>\n * DOM mutation is observed.\n *\n * @param {object} settings\n */\nfunction addMutationObserver(settings) {\n    function isDisabled(node) {\n        const isDisabledAttr  = isLink(node) && node.hasAttribute('disabled');\n        const isDisabledSheet = (node.sheet || {}).disabled;\n\n        return isDisabledAttr || isDisabledSheet;\n    }\n    function isLink(node) {\n        const isStylesheet = node.nodeName.toLowerCase() === 'link' && (node.getAttribute('rel') || '').indexOf('stylesheet') !== -1;\n\n        return isStylesheet;\n    }\n    function isStyle(node) {\n        return node.nodeName.toLowerCase() === 'style';\n    }\n    function isValidAttributeMutation(mutation) {\n        let isValid = false;\n\n        if (mutation.type === 'attributes' && isLink(mutation.target) && !isDisabled(mutation.target)) {\n            const isEnabledMutation = mutation.attributeName === 'disabled';\n            const isHrefMutation = mutation.attributeName === 'href';\n            const isSkipNode = mutation.target.getAttribute('data-cssvars') === 'skip';\n            const isSrcNode = mutation.target.getAttribute('data-cssvars') === 'src';\n\n            // Enabled\n            if (isEnabledMutation) {\n                isValid = !isSkipNode && !isSrcNode;\n            }\n            // Href\n            else if (isHrefMutation) {\n                if (isSkipNode) {\n                    mutation.target.setAttribute('data-cssvars', '');\n                }\n                else if (isSrcNode) {\n                    resetCssNodes(settings.rootElement, true);\n                }\n\n                isValid = true;\n            }\n        }\n\n        return isValid;\n    }\n    function isValidStyleTextMutation(mutation) {\n        let isValid = false;\n\n        if (mutation.type === 'childList') {\n            const isStyleElm = isStyle(mutation.target);\n            const isOutNode = mutation.target.getAttribute('data-cssvars') === 'out';\n\n            isValid = isStyleElm && !isOutNode;\n        }\n\n        return isValid;\n    }\n    function isValidAddMutation(mutation) {\n        let isValid = false;\n\n        if (mutation.type === 'childList') {\n            isValid = [].slice.call(mutation.addedNodes).some(node => {\n                const isElm           = node.nodeType === 1;\n                const hasAttr         = isElm && node.hasAttribute('data-cssvars');\n                const isStyleWithVars = isStyle(node) && regex.cssVars.test(node.textContent);\n                const isValid         = !hasAttr && (isLink(node) || isStyleWithVars);\n\n                return isValid && !isDisabled(node);\n            });\n        }\n\n        return isValid;\n    }\n    function isValidRemoveMutation(mutation) {\n        let isValid = false;\n\n        if (mutation.type === 'childList') {\n            isValid = [].slice.call(mutation.removedNodes).some(node => {\n                const isElm     = node.nodeType === 1;\n                const isOutNode = isElm && node.getAttribute('data-cssvars') === 'out';\n                const isSrcNode = isElm && node.getAttribute('data-cssvars') === 'src';\n                const isValid   = isSrcNode;\n\n                if (isSrcNode || isOutNode) {\n                    const dataGroup  = node.getAttribute('data-cssvars-group');\n                    const orphanNode = settings.rootElement.querySelector(`[data-cssvars-group=\"${dataGroup}\"]`);\n\n                    if (isSrcNode) {\n                        resetCssNodes(settings.rootElement, true);\n                    }\n\n                    if (orphanNode) {\n                        orphanNode.parentNode.removeChild(orphanNode);\n                    }\n                }\n\n                return isValid;\n            });\n        }\n\n        return isValid;\n    }\n\n    if (!window.MutationObserver) {\n        return;\n    }\n\n    if (cssVarsObserver) {\n        cssVarsObserver.disconnect();\n        cssVarsObserver = null;\n    }\n\n    cssVarsObserver = new MutationObserver(function(mutations) {\n        const hasValidMutation = mutations.some((mutation) => {\n            return (\n                isValidAttributeMutation(mutation) ||\n                isValidStyleTextMutation(mutation) ||\n                isValidAddMutation(mutation) ||\n                isValidRemoveMutation(mutation)\n            );\n        });\n\n        if (hasValidMutation) {\n            cssVars(settings);\n        }\n    });\n\n    cssVarsObserver.observe(document.documentElement, {\n        attributes     : true,\n        attributeFilter: ['disabled', 'href'],\n        childList      : true,\n        subtree        : true\n    });\n}\n\n/**\n * Debounces cssVars() calls\n *\n * @param {object} settings\n */\nfunction cssVarsDebounced(settings, delay = 100) {\n    clearTimeout(debounceTimer);\n    debounceTimer = setTimeout(function() {\n        settings.__benchmark = null;\n        cssVars(settings);\n    }, delay);\n}\n\n/**\n * Fixes issue with keyframe properties set using CSS custom property not being\n * applied properly in some legacy (IE) and modern (Safari) browsers.\n *\n * @param {object} rootElement\n */\nfunction fixKeyframes(rootElement) {\n    const animationNameProp = [\n        'animation-name',\n        '-moz-animation-name',\n        '-webkit-animation-name'\n    ].filter(prop => getComputedStyle(document.body)[prop])[0];\n\n    if (animationNameProp) {\n        const allNodes      = [].slice.call(rootElement.querySelectorAll('*'));\n        const keyframeNodes = [];\n        const nameMarker    = '__CSSVARSPONYFILL-KEYFRAMES__';\n\n        // Modify animation name\n        for (let i = 0, len = allNodes.length; i < len; i++) {\n            const node          = allNodes[i];\n            const animationName = getComputedStyle(node)[animationNameProp];\n\n            if (animationName !== 'none') {\n                node.style[animationNameProp] += nameMarker;\n                keyframeNodes.push(node);\n            }\n        }\n\n        // Force reflow\n        void document.body.offsetHeight;\n\n        // Restore animation name\n        for (let i = 0, len = keyframeNodes.length; i < len; i++) {\n            const nodeStyle = keyframeNodes[i].style;\n\n            nodeStyle[animationNameProp] = nodeStyle[animationNameProp].replace(nameMarker, '');\n        }\n    }\n}\n\n/**\n * Convert relative CSS url(...) values to absolute based on baseUrl\n *\n * @param {string} cssText\n * @param {string} baseUrl\n * @returns {string}\n */\nfunction fixRelativeCssUrls(cssText, baseUrl) {\n    const cssUrls = cssText\n        // Remove comments\n        .replace(regex.cssComments, '')\n        // Match url(...) values\n        .match(regex.cssUrls) || [];\n\n    cssUrls.forEach(cssUrl => {\n        const oldUrl = cssUrl.replace(regex.cssUrls, '$1');\n        const newUrl = getFullUrl(oldUrl, baseUrl);\n\n        cssText = cssText.replace(cssUrl, cssUrl.replace(oldUrl, newUrl));\n    });\n\n    return cssText;\n}\n\n/**\n * Converts all object property names to leading '--' style\n *\n * @param {object} varObj Object containing CSS custom property name:value pairs\n * @returns {object}\n */\nfunction fixVarNames(varObj = {}) {\n    const reLeadingHyphens = /^-{2}/;\n\n    return Object.keys(varObj).reduce((obj, value) => {\n        const key = reLeadingHyphens.test(value) ? value : `--${value.replace(/^-+/, '')}`;\n\n        obj[key] = varObj[value];\n\n        return obj;\n    }, {});\n}\n\n/**\n * Returns fully qualified URL from relative URL and (optional) base URL\n *\n * @param   {string} url\n * @param   {string} [base=location.href]\n * @returns {string}\n */\nfunction getFullUrl(url, base = location.href) {\n    const d = document.implementation.createHTMLDocument('');\n    const b = d.createElement('base');\n    const a = d.createElement('a');\n\n    d.head.appendChild(b);\n    d.body.appendChild(a);\n    b.href = base;\n    a.href = url;\n\n    return a.href;\n}\n\n/**\n * Returns a time stamp in milliseconds\n *\n * @returns {number}\n */\nfunction getTimeStamp() {\n    return isBrowser && (window.performance || {}).now ? window.performance.now() : new Date().getTime();\n}\n\nfunction resetCssNodes(rootElement, resetDOMVariableStore = false) {\n    const resetNodes = [].slice.call(rootElement.querySelectorAll('[data-cssvars=\"skip\"],[data-cssvars=\"src\"]'));\n\n    resetNodes.forEach(node => node.setAttribute('data-cssvars', ''));\n\n    if (resetDOMVariableStore) {\n        variableStore.dom = {};\n    }\n}\n\n\n// Export\n// =============================================================================\nexport default cssVars;\n"],"sourceRoot":"assets/scripts/"}