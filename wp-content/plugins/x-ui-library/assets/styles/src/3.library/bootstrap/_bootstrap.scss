@import "bootstrap-common";
// override bootstrap utilities before being used in other component
// Layout & components
@import 'node_modules/bootstrap/scss/root';
@import 'reboot';
@import 'node_modules/bootstrap/scss/type';
@import 'node_modules/bootstrap/scss/images';
@import 'node_modules/bootstrap/scss/containers';
@import 'node_modules/bootstrap/scss/grid';
//@import "node_modules/bootstrap/scss/tables";
@import 'node_modules/bootstrap/scss/forms';
//@import "node_modules/bootstrap/scss/buttons";
@import 'node_modules/bootstrap/scss/transitions';
//@import "node_modules/bootstrap/scss/dropdown";
//@import "node_modules/bootstrap/scss/button-group";
@import 'node_modules/bootstrap/scss/nav';
// @import "node_modules/bootstrap/scss/navbar";
//@import "node_modules/bootstrap/scss/card";
//@import "node_modules/bootstrap/scss/accordion";
//@import "node_modules/bootstrap/scss/breadcrumb";
//@import "node_modules/bootstrap/scss/pagination";
//@import "node_modules/bootstrap/scss/badge";
//@import "node_modules/bootstrap/scss/alert";
//@import "node_modules/bootstrap/scss/progress";
//@import "node_modules/bootstrap/scss/list-group";
// @import 'node_modules/bootstrap/scss/close';
// @import 'node_modules/bootstrap/scss/toasts';
@import 'node_modules/bootstrap/scss/modal';
//@import "node_modules/bootstrap/scss/tooltip";
//@import "node_modules/bootstrap/scss/popover";
// @import 'node_modules/bootstrap/scss/carousel';
//@import "node_modules/bootstrap/scss/spinners";
@import "node_modules/bootstrap/scss/offcanvas";
//@import "node_modules/bootstrap/scss/placeholders";

// Helpers
@import 'node_modules/bootstrap/scss/helpers/visually-hidden';

// Utilities
@import 'node_modules/bootstrap/scss/utilities/api';
// scss-docs-end import-stack
//
.container,
.container-fluid {
  padding-left: 0;
  padding-right: 0;
  max-width: 100vw;
}
// bootstrap default files end
@each $breakpoint, $map in $x-grid-breakpoints {
  $infix: breakpoint-infix($breakpoint, $x-grid-breakpoints);
  $margin: map-get($map, margin);
  @include media-breakpoint-up($breakpoint) {
    .container,
    .container-fluid {
      --container-padding: #{$margin};
      padding-left: var(--container-padding);
      padding-right: var(--container-padding);
    }
    .container-#{$infix} {
      padding-left: var(--container-padding);
      padding-right: var(--container-padding);
    }
  }
}
@for $i from 1 through length($x_grid_breakpointsValues) {
  $map: nth($x_grid_breakpointsValues, $i);
  $breakpoint: nth($x_grid_breakpointsKeys, $i);
  $min-width: map-get($map, minWidth);
  $max-width: map-get($map, maxWidth);
  @if ($min-width) {
    @if not $max-width {
      @include media-breakpoint-up($breakpoint) {
        $margin: map-get($map, margin);
        .container {
          max-width: calc(100vw);
        }
      }
    } @else {
      .container {
        max-width: min($max-width, 100vw);
      }
    }
  }
}
// bootstrap default files end
@each $breakpoint, $map in $x-grid-breakpoints {
  $gutter: map-get($map, gutter);
  $baseFontSize: map-get($map, baseFontSize);
  @include media-breakpoint-up($breakpoint) {
    html {
      font-size: $baseFontSize;
      line-height: calc(#{$baseFontSize} + 8px);
    }
    .grid {
      --bs-gap: #{$gutter};
    }
    .row {
      --bs-gutter-x: #{$gutter};
    }
  }
}
