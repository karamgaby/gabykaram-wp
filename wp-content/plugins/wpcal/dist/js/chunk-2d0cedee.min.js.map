{"version":3,"sources":["webpack:///./src/store/admin.js"],"names":["Vue","use","Vuex","Store","strict","modules","common","common_module","state","client_end","store","license_info","current_admin_details","current_admin_notices","managed_active_admins_details","wpcal_site_urls","is_admin_end_access_granted","admin_main_nonce","mutations","set_license_info","value","set_managed_active_admins_details","set_store_by_obj","value_obj","prop","hasOwnProperty","getters","get_license_info","get_current_admin_details","get_current_admin_notices","get_managed_active_admins_details","get_managed_active_admins_for_host_filter","admins","cloneDeep","Array","isArray","all_admin_as_admin","admin_user_id","admin_type","status","name","firstname","display_name","user_email","unshift","get_admin_details","admin_details","found_admin_details","find","_admin_details","get_wpcal_site_urls","get_is_admin_end_access_granted","get_admin_main_nonce","actions","load_managed_active_admins_details","context","wpcal_request","action_managed_active_admins_details","post_data","action","get_ajax_main_action","axios","post","window","wpcal_ajax","ajax_url","params","_remove_options_before_call","background_call","then","response","data","commit","catch","error","console","log"],"mappings":"wOAOAA,aAAIC,IAAIC,QAIO,iBAAIA,OAAKC,MAAM,CAC5BC,QAAQ,EACRC,QAAS,CACPC,OAAQC,QAEVC,MAAO,CACLC,WAAY,QACZC,MAAO,CACLC,aAAc,KACdC,sBAAuB,GACvBC,sBAAuB,KACvBC,8BAA+B,GAC/BC,gBAAiB,GACjBC,6BAA6B,EAC7BC,iBAAkB,OAGtBC,UAAW,CACTC,iBAAkB,SAACX,EAAOY,GACxBZ,EAAME,MAAMC,aAAeS,GAE7BC,kCAAmC,SAACb,EAAOY,GACzCZ,EAAME,MAAMI,8BAAgCM,GAE9CE,iBAAkB,SAACd,EAAOe,GACxB,IAAK,IAAIC,KAAQD,EACXf,EAAME,MAAMe,eAAeD,KAC7BhB,EAAME,MAAMc,GAAQD,EAAUC,MAKtCE,QAAS,CAGPC,iBAAkB,SAAAnB,GAAK,OAAIA,EAAME,MAAMC,cACvCiB,0BAA2B,SAAApB,GAAK,OAAIA,EAAME,MAAME,uBAChDiB,0BAA2B,SAAArB,GAAK,OAAIA,EAAME,MAAMG,uBAChDiB,kCAAmC,SAAAtB,GAAK,OACtCA,EAAME,MAAMI,+BACdiB,0CAA2C,SAAAvB,GACzC,IAAIwB,EAASC,eAAUzB,EAAME,MAAMI,+BACnC,GAAIoB,MAAMC,QAAQH,GAAS,CACzB,IAAII,EAAqB,CACvBC,cAAe,IACfC,WAAY,gBACZC,OAAQ,IACRC,KAAM,MACNC,UAAW,GACXC,aAAc,MACdC,WAAY,OAEdX,EAAOY,QAAQR,GAEjB,OAAOJ,GAETa,kBAAmB,SAAArC,GAAK,OAAI,SAAA6B,GAC1B,IAAIS,EAAgB,GAChBd,EAASC,eAAUzB,EAAME,MAAMI,+BAC/BiC,EAAsBf,EAAOgB,MAC/B,SAAAC,GAAc,OAAIA,EAAeZ,eAAiBA,KAEpD,OAAOU,GAA4CD,IAErDI,oBAAqB,SAAA1C,GAAK,OAAIA,EAAME,MAAMK,iBAC1CoC,gCAAiC,SAAA3C,GAAK,OACpCA,EAAME,MAAMM,6BACdoC,qBAAsB,SAAA5C,GAAK,OAAIA,EAAME,MAAMO,mBAE7CoC,QAAS,CACPC,mCADO,SAC4BC,GACjC,IAAIC,EAAgB,GAChBC,EACF,sDACFD,EAAcC,GAAwC,UAEtD,IAAIC,EAAY,CACdC,OAAQJ,EAAQ7B,QAAQkC,qBACxBJ,cAAeA,GAGjBK,IACGC,KAAKC,OAAOC,WAAWC,SAAUP,EAAW,CAC3CQ,OAAQ,CAAEC,4BAA6B,CAAEC,iBAAiB,MAE3DC,MAAK,SAAAC,GAAY,MAGZ,YADFA,EAASC,KAAKd,GAAsClB,QAApD,UAEA+B,EAASC,KAAKd,UAFd,OAEA,EACI3C,+BAEJyC,EAAQiB,OACN,oCACAF,EAASC,KAAKd,GACX3C,kCAIR2D,OAAM,SAAAC,GACLC,QAAQC,IAAIF","file":"js/chunk-2d0cedee.min.js","sourcesContent":["import Vue from \"vue\";\nimport Vuex from \"vuex\";\n\nimport axios from \"axios\";\n\nimport { cloneDeep } from \"lodash-es\";\n\nVue.use(Vuex);\n\nimport common_module from \"@/store/common_module.js\";\n\nexport default new Vuex.Store({\n  strict: true,\n  modules: {\n    common: common_module\n  },\n  state: {\n    client_end: \"admin\",\n    store: {\n      license_info: null,\n      current_admin_details: {},\n      current_admin_notices: null,\n      managed_active_admins_details: [], // futuristic - current wpcal admin type is administrator only\n      wpcal_site_urls: {},\n      is_admin_end_access_granted: true,\n      admin_main_nonce: null\n    }\n  },\n  mutations: {\n    set_license_info: (state, value) => {\n      state.store.license_info = value;\n    },\n    set_managed_active_admins_details: (state, value) => {\n      state.store.managed_active_admins_details = value;\n    },\n    set_store_by_obj: (state, value_obj) => {\n      for (let prop in value_obj) {\n        if (state.store.hasOwnProperty(prop)) {\n          state.store[prop] = value_obj[prop];\n        }\n      }\n    }\n  },\n  getters: {\n    // get_client: state => state.client,\n    // get_store: state => state.store,\n    get_license_info: state => state.store.license_info,\n    get_current_admin_details: state => state.store.current_admin_details,\n    get_current_admin_notices: state => state.store.current_admin_notices,\n    get_managed_active_admins_details: state =>\n      state.store.managed_active_admins_details,\n    get_managed_active_admins_for_host_filter: state => {\n      let admins = cloneDeep(state.store.managed_active_admins_details);\n      if (Array.isArray(admins)) {\n        let all_admin_as_admin = {\n          admin_user_id: \"0\",\n          admin_type: \"administrator\",\n          status: \"1\",\n          name: \"All\",\n          firstname: \"\",\n          display_name: \"All\",\n          user_email: \"All\"\n        };\n        admins.unshift(all_admin_as_admin);\n      }\n      return admins;\n    },\n    get_admin_details: state => admin_user_id => {\n      let admin_details = {};\n      let admins = cloneDeep(state.store.managed_active_admins_details);\n      let found_admin_details = admins.find(\n        _admin_details => _admin_details.admin_user_id == admin_user_id\n      );\n      return found_admin_details ? found_admin_details : admin_details;\n    },\n    get_wpcal_site_urls: state => state.store.wpcal_site_urls,\n    get_is_admin_end_access_granted: state =>\n      state.store.is_admin_end_access_granted,\n    get_admin_main_nonce: state => state.store.admin_main_nonce\n  },\n  actions: {\n    load_managed_active_admins_details(context) {\n      let wpcal_request = {};\n      let action_managed_active_admins_details =\n        \"get_managed_active_admins_details_for_current_admin\";\n      wpcal_request[action_managed_active_admins_details] = \"dummy__\";\n\n      let post_data = {\n        action: context.getters.get_ajax_main_action,\n        wpcal_request: wpcal_request\n      };\n\n      axios\n        .post(window.wpcal_ajax.ajax_url, post_data, {\n          params: { _remove_options_before_call: { background_call: true } }\n        })\n        .then(response => {\n          if (\n            response.data[action_managed_active_admins_details].status ===\n              \"success\" &&\n            response.data[action_managed_active_admins_details]\n              ?.managed_active_admins_details\n          ) {\n            context.commit(\n              \"set_managed_active_admins_details\",\n              response.data[action_managed_active_admins_details]\n                .managed_active_admins_details\n            );\n          }\n        })\n        .catch(error => {\n          console.log(error);\n        });\n    }\n  }\n});\n"],"sourceRoot":""}