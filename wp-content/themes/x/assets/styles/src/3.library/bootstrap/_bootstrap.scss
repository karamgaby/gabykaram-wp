@import "bootstrap-common";
// override bootstrap utilities before being used in other component

// Layout & components
@import 'node_modules/bootstrap/scss/root';
@import 'node_modules/bootstrap/scss/reboot';
@import 'node_modules/bootstrap/scss/type';
@import 'node_modules/bootstrap/scss/images';
@import 'node_modules/bootstrap/scss/containers';
@import 'node_modules/bootstrap/scss/grid';
//@import "node_modules/bootstrap/scss/tables";
@import 'node_modules/bootstrap/scss/forms';
//@import "node_modules/bootstrap/scss/buttons";
@import 'node_modules/bootstrap/scss/transitions';
//@import "node_modules/bootstrap/scss/dropdown";
//@import "node_modules/bootstrap/scss/button-group";
@import 'node_modules/bootstrap/scss/nav';
// @import "node_modules/bootstrap/scss/navbar";
//@import "node_modules/bootstrap/scss/card";
//@import "node_modules/bootstrap/scss/accordion";
//@import "node_modules/bootstrap/scss/breadcrumb";
//@import "node_modules/bootstrap/scss/pagination";
//@import "node_modules/bootstrap/scss/badge";
//@import "node_modules/bootstrap/scss/alert";
//@import "node_modules/bootstrap/scss/progress";
//@import "node_modules/bootstrap/scss/list-group";
// @import 'node_modules/bootstrap/scss/close';
// @import 'node_modules/bootstrap/scss/toasts';
// @import 'node_modules/bootstrap/scss/modal';
//@import "node_modules/bootstrap/scss/tooltip";
//@import "node_modules/bootstrap/scss/popover";
// @import 'node_modules/bootstrap/scss/carousel';
//@import "node_modules/bootstrap/scss/spinners";
//@import "node_modules/bootstrap/scss/offcanvas";
//@import "node_modules/bootstrap/scss/placeholders";

// Helpers
@import 'node_modules/bootstrap/scss/helpers/visually-hidden';

// Utilities
@import 'node_modules/bootstrap/scss/utilities/api';
// scss-docs-end import-stack

.container,
.container-fluid {
  padding-left: 0;
  padding-right: 0;
}
// bootstrap default files end
@each $breakpoint, $map in $x-grid-breakpoints {
  $infix: breakpoint-infix($breakpoint, $x-grid-breakpoints);
  @include media-breakpoint-up($breakpoint) {
    .container-#{$infix} {
      padding-left: 0;
      padding-right: 0;
    }
  }
}
// bootstrap default files end
@each $breakpoint, $map in $x-grid-breakpoints {
  $gutter: map-get($map, gutter);
  $baseFontSize: map-get($map, baseFontSize);
  @include media-breakpoint-up($breakpoint) {
    html {
      font-size: $baseFontSize;
      line-height: calc(#{$baseFontSize} + 8px);
    }
    .row {
      --bs-gutter-x: #{$gutter};
      margin-right: 0;
      margin-left: 0;
      gap: #{$gutter};
    }
    .row > * {
      padding: 0;
    }
  }
}

@mixin make-grid-columns2($columns: $grid-columns, $grid-breakpoints, $x-grid-breakpoints ) {
  @each $breakpoint, $width in $grid-breakpoints {
    $infix: breakpoint-infix($breakpoint, $grid-breakpoints);
    $x-breakpoint: map-get($x-grid-breakpoints, $breakpoint);
    $margin: map-get($x-breakpoint, margin);
    $gutter: map-get($x-breakpoint, gutter);
    @include media-breakpoint-up($breakpoint, $grid-breakpoints) {
      .col {
        //  min-width: (100% - total-columns * gab) / total-columns;
        min-width: calc((100% - $columns * $gutter) / $columns);
      }
      @for $i from 1 through $columns {
        .col-#{$i} {
          $flex-basis: calc((100% - #{$columns - 1} * #{$gutter}) / #{$columns} * #{$i} + #{($i - 1) * $gutter});
          flex-basis: $flex-basis;
        }

      }
      // Provide basic `.col-{bp}` classes for equal-width flexbox columns
      .col#{$infix} {
        min-width: calc((100% - $columns * $gutter) / $columns);
      }
      @if $columns > 0 {
        @for $i from 1 through $columns {
          .col#{$infix}-#{$i} {
            min-width: calc((100% - $columns * $gutter) / $columns);
            $flex-basis: calc(((100% - #{$columns - 1} * #{$gutter}) / #{$columns} * #{$i}) + #{($i - 1) * $gutter});
            flex-basis: $flex-basis;
          }
        }
      }
      // old style
        // not tested
      // offset is out of the grid system

      .col#{$infix}-auto {
        @include make-col-auto();
      }

      // Gutters
      //
      // Make use of `.g-*`, `.gx-*` or `.gy-*` utilities to change spacing between the columns.
      @each $key, $value in $gutters {
        .g#{$infix}-#{$key},
        .gx#{$infix}-#{$key} {
          --#{$prefix}gutter-x: #{$value};
        }
        .g#{$infix}-#{$key},
        .gy#{$infix}-#{$key} {
          --#{$prefix}gutter-y: #{$value};
        }
      }
    }
  }
}

@include make-grid-columns2($grid-columns, $grid-breakpoints, $x-grid-breakpoints);
